Index: scripts/CharacterInstance.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/CharacterInstance.gd b/scripts/CharacterInstance.gd
new file mode 100644
--- /dev/null	(date 1752262112162)
+++ b/scripts/CharacterInstance.gd	(date 1752262112162)
@@ -0,0 +1,72 @@
+extends RefCounted
+
+class_name CharacterInstance
+
+signal health_changed(old_health, new_health)
+signal damaged(amount: int, source: CharacterInstance)
+signal healed(amount: int)
+signal died()
+
+var resource: CharacterResource
+var attack_power: int
+var current_health: int
+var max_health: int
+var current_mana: int
+var max_mana: int
+var speed: int
+var current_experience: int
+var status_effects: Array = []
+var turn_meter: int = 0
+var learnt_skills: Array[Skill] = []
+var effects: Array[Effect] = []
+var damage_type: DamageTypes.Type
+
+func _init(res: CharacterResource) -> void:
+	resource = res
+
+	attack_power = res.attack_power
+	current_health = res.health_points
+	max_health = res.health_points
+	current_mana = res.mana_points
+	max_mana = res.mana_points
+	speed = res.speed
+	current_experience = res.experience
+	damage_type = res.default_damage_type
+	
+	for skill in resource.default_skills:
+		learnt_skills.append(skill)
+	
+	for effect in resource.default_effects:
+		effects.append(effect)
+
+func set_current_health(new_health: int) -> void:
+	var old = current_health
+	current_health = clamp(new_health, 0, max_health)
+	if current_health < old:
+		emit_signal("damaged", old - current_health, self)
+	elif current_health > old:
+		emit_signal("healed", current_health - old)
+	emit_signal("health_changed", old, current_health)
+	if current_health == 0 and old > 0:
+		emit_signal("died")
+
+func apply_effect(effect: Effect) -> void:
+	for pre_effect in effects:
+		pre_effect.on_trigger("pre_apply_effect", effect)
+	
+	effect.on_apply(self)
+	effects.append(effect)
+		
+func remove_effect(effect: Resource) -> void:
+	effects.erase(effect)
+	if effects.size() > 0 and effect.has_method("on_expire"):
+		effect.on_expire(self)
+		
+func process_effects(trigger: String, data: DamageContext = null) -> void:
+	for effect in effects.duplicate():
+		print("[Effect] Triggering '%s' on %s with %s" %
+			[trigger, resource.name, effect.name])
+		effect.on_trigger(trigger, data)
+
+func get_effects_by_category(cat: Effect.EffectCategory) -> Array[Effect]:
+	return effects.filter(func(e): return e.category == cat);
Index: scripts/EncounterManager.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EncounterManager.gd.uid b/scripts/EncounterManager.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/EncounterManager.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://dpc5d3ykhesm7
Index: scripts/TileFactory.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/TileFactory.gd.uid b/scripts/TileFactory.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/TileFactory.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://dwx1jdk7am3my
Index: scripts/EnemySlot.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EnemySlot.gd.uid b/scripts/EnemySlot.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/EnemySlot.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://dymuc6nxf4l2d
Index: scripts/CharacterRegistry.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/CharacterRegistry.gd.uid b/scripts/CharacterRegistry.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/CharacterRegistry.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://ce28blg47rtme
Index: scripts/UIBattle.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/UIBattle.gd b/scripts/UIBattle.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/UIBattle.gd	(date 1752085951000)
@@ -0,0 +1,89 @@
+extends Control
+
+signal action_selected(action: String, options: Array)
+
+var current_battler: CharacterInstance = null
+
+@onready var attack_button = $VBoxContainer/AttackButton
+@onready var defend_button = $VBoxContainer/DefendButton
+@onready var skill_button = $VBoxContainer/SkillButton
+@onready var item_button = $VBoxContainer/ItemButton
+@onready var flee_button = $VBoxContainer/FleeButton
+@onready var skill_popup = $SkillPopup
+@onready var skill_list_container = $SkillPopup/ScrollContainer/SkillListContainer
+
+var battle_manager: BattleManager
+
+func setup(manager: BattleManager) -> void:
+	battle_manager = manager
+	battle_manager.current_battler_change.connect(_on_battler_change)
+	
+func _on_battler_change(battler):
+	current_battler = battler
+
+func _on_defend_button_pressed() -> void:
+	emit_signal("action_selected", "defend", [])
+
+
+func _on_attack_button_pressed() -> void:
+	emit_signal("action_selected", "attack", [])
+
+
+func _on_flee_button_pressed() -> void:
+	emit_signal("action_selected", "flee", [])
+
+
+func _on_skill_selected(skill) -> void:
+	emit_signal("action_selected", "skill", [skill])
+	skill_popup.hide()
+
+
+func _on_item_selected(item) -> void:
+	emit_signal("action_selected", "item", [item])
+
+func highlight_action(action: String):
+	_reset_all_button_highlights()
+	
+	match action:
+		"attack":
+			_highlight_button(attack_button)
+		"defend":
+			_highlight_button(defend_button)
+		"flee":
+			_highlight_button(flee_button)
+		"skill":
+			_highlight_button(skill_button)
+		"item":
+			_highlight_button(item_button)
+
+func _highlight_button(button: Button):
+	button.add_theme_color_override("font_color", Color.YELLOW)
+
+func _reset_all_button_highlights():
+	var buttons = [attack_button, defend_button, flee_button, skill_button, item_button]
+	for b in buttons:
+		b.add_theme_color_override("font_color", Color.WHITE)
+
+
+func _on_skill_button_pressed() -> void:
+	_populate_skill_list()
+	skill_popup.popup_centered()
+
+
+func _on_item_button_pressed() -> void:
+	pass # Replace with function body.
+
+func _populate_skill_list():
+	for child in skill_list_container.get_children():
+		child.queue_free()
+
+	var skills = []
+	for s in current_battler.learnt_skills:
+		skills.append(s)
+	
+	for skill in skills:
+		var btn = Button.new()
+		btn.text = "%s (%d MP)" % [skill["name"], skill["mp_cost"]]
+		btn.size_flags_horizontal = Control.SIZE_EXPAND_FILL
+		btn.pressed.connect(_on_skill_selected.bind(skill))
+		skill_list_container.add_child(btn)
Index: scripts/TargetingManager.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/TargetingManager.gd b/scripts/TargetingManager.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/TargetingManager.gd	(date 1752085951000)
@@ -0,0 +1,79 @@
+extends Node
+
+signal target_hovered(target)
+signal target_unhovered(previous)
+signal target_clicked(target)
+
+@export var collision_mask: int
+@export var target_class: String = ""
+
+var current_hovered: Node = null
+var targeting_enabled = false
+var last_mouse_pos = Vector2(-1, -1)
+
+@onready var camera: Camera3D
+@onready var space_state: PhysicsDirectSpaceState3D
+var ray_query = PhysicsRayQueryParameters3D.new()
+
+func _ready():
+	set_process_unhandled_input(true)
+
+func _input(event):
+	if not targeting_enabled:
+		return
+
+	if event is InputEventMouseMotion:
+		if event.position != last_mouse_pos:
+			last_mouse_pos = event.position
+			_update_hovered_target(event.position)
+	if event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
+		if current_hovered:
+			emit_signal("target_clicked", current_hovered)
+
+func _update_hovered_target(mouse_pos: Vector2):
+	ray_query.from = camera.project_ray_origin(mouse_pos)
+	ray_query.to = ray_query.from + camera.project_ray_normal(mouse_pos) * 100
+	ray_query.collision_mask = collision_mask
+	ray_query.exclude = []
+
+	var result = space_state.intersect_ray(ray_query)
+	if result and result.collider:
+		var node = result.collider
+		while node and not (node.is_class(target_class) or is_class_custom(node)):
+			node = node.get_parent()
+		if node != current_hovered:
+			if current_hovered:
+				emit_signal("target_unhovered", current_hovered)
+			current_hovered = node
+			emit_signal("target_hovered", current_hovered)
+	else:
+		if current_hovered:
+			emit_signal("target_unhovered", current_hovered)
+			current_hovered = null
+
+func configure_for_battle(new_camera: Camera3D):
+	targeting_enabled = true
+	target_class = "EnemySlot"
+	collision_mask = 1 << 2
+	camera = new_camera
+	space_state = camera.get_world_3d().direct_space_state
+	print("targeting configured for battle")
+
+func configure_for_overworld():
+	targeting_enabled = true
+	target_class = "InteractableObject"
+	collision_mask = 1 << 3
+
+func disable_targeting():
+	targeting_enabled = false
+
+func enable_targeting():
+	targeting_enabled = true
+
+func is_class_custom(node: Object) -> bool:
+	var script = node.get_script()
+	if script:
+		var global_class_name = script.get_global_name()
+		if global_class_name:
+			return global_class_name == target_class
+	return false
Index: scripts/ConvertTileMapLayer.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/ConvertTileMapLayer.gd.uid b/scripts/ConvertTileMapLayer.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/ConvertTileMapLayer.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://c4ahdxkhm0pq5
Index: scripts/MapManager.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/MapManager.gd b/scripts/MapManager.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/MapManager.gd	(date 1752085951000)
@@ -0,0 +1,23 @@
+extends Node
+
+var maps = {
+	"area_00": load("res://maps/hub/starting_area.tres"),
+	"crypt_00": load("res://maps/crypt/crypt_00.tres")
+}
+
+var arenas = {
+	"arena_default_00": load("res://maps/_arena/default/arena_default_00.tscn")
+}
+
+func get_map(id: String) -> MapData:
+	if maps.has(id):
+		return maps[id]
+	return null
+
+func get_arena(id: String) -> PackedScene:
+	if arenas.has(id):
+		return arenas[id]
+	return null
+
+func is_transition(tile_data: Dictionary):
+	return "transition" in tile_data and tile_data["transition"] 
Index: scripts/TileFactory.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/TileFactory.gd b/scripts/TileFactory.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/TileFactory.gd	(date 1752085951000)
@@ -0,0 +1,46 @@
+extends Node
+
+var tiles := {
+	"default": {
+		"wall": {
+			"default": preload("res://scenes/tiles/default/Wall.tscn")
+		},
+		"floor": {
+			"default": preload("res://scenes/tiles/default/Floor.tscn")
+		}
+	},
+	"crypt": {
+		"wall": {
+			"stone_wall": preload("res://scenes/tiles/crypt/Wall_Crypt.tscn"),
+		},
+		"floor": {
+			"wooden_floor": preload("res://scenes/tiles/crypt/Floor_Crypt.tscn"),
+			"stone_floor": preload("res://scenes/tiles/crypt/Floor_Crypt.tscn")
+		}
+	},
+	"castle": {
+		"wall": {
+			"default": preload("res://scenes/tiles/castle/Wall_Castle.tscn")
+		},
+		"floor": {
+			"default": preload("res://scenes/tiles/castle/Floor_Castle.tscn")
+		}
+	}
+}
+func get_tile_style(theme: String, type: String, style: String) -> PackedScene:
+	if theme in tiles and type in tiles[theme] and style in tiles[theme][type]:
+		return tiles[theme][type][style]
+	push_error("Missing style: %s - %s - %s" % [theme, type, style])
+	return tiles[theme][type][style]
+
+func get_tile_scene(theme: String, tile_type: String) -> PackedScene:
+	if theme in tiles and tile_type in tiles[theme]:
+		return tiles[theme][tile_type]
+	push_error("Missing tile: %s - %s" % [theme, tile_type])
+	return tiles["default"]["floor"]  # Fallback
+
+func get_scene(theme: String):
+	if theme in tiles:
+		return tiles[theme]
+	push_error("Missing theme: %s" % [theme])
+	return tiles["default"]  # Fallback
Index: scripts/UIPartyContainer.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/UIPartyContainer.gd.uid b/scripts/UIPartyContainer.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/UIPartyContainer.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://bk075a76c1hkh
Index: scripts/TargetingManager.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/TargetingManager.gd.uid b/scripts/TargetingManager.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/TargetingManager.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://d2wtbshkn1r5m
Index: scripts/UIPartyMemberSlot.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/UIPartyMemberSlot.gd b/scripts/UIPartyMemberSlot.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/UIPartyMemberSlot.gd	(date 1752085951000)
@@ -0,0 +1,44 @@
+extends Panel
+
+class_name PartyMemberSlot
+
+signal target_clicked(target)
+
+var character_instance: CharacterInstance
+var targeting_enabled = false
+
+func bind(character: CharacterInstance) -> void:
+	character_instance = character
+
+	#$Portrait.texture = character.resource.portrait
+	$MarginContainer/GridContainer/NameContainer/Name.text = character.resource.name
+	$MarginContainer/GridContainer/LabelValueContainer/Values/HPContainer/CurrentHP.text = str(character.current_health)
+	$MarginContainer/GridContainer/LabelValueContainer/Values/HPContainer/MaxHP.text = str(character.max_health)
+	$MarginContainer/GridContainer/LabelValueContainer/Values/MPContainer/CurrentMP.text = str(character.current_mana)
+	$MarginContainer/GridContainer/LabelValueContainer/Values/MPContainer/MaxMP.text = str(character.max_mana)
+
+func hide_info():
+	var cont = $MarginContainer
+	cont.visible = false
+
+func _on_health_changed(old_health: int, new_health: int) -> void:
+	$MarginContainer/GridContainer/LabelValueContainer/Values/HPContainer/CurrentHP.text = str(new_health)
+
+
+func _on_gui_input(event: InputEvent) -> void:
+	if not targeting_enabled:
+		return
+	
+	if event is InputEventMouseButton and event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
+		if not character_instance:
+			print("Invalid party member selected")
+			return
+			
+		print("targeted ", character_instance.resource.name)
+		TargetingManager.emit_signal("target_clicked", self)
+
+func disable_slot_targeting():
+	targeting_enabled = false
+
+func enable_slot_targeting():
+	targeting_enabled = true
Index: scripts/MapInstance.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/MapInstance.gd.uid b/scripts/MapInstance.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/MapInstance.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://bxk8jepen1fml
Index: scripts/PartyManager.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/PartyManager.gd b/scripts/PartyManager.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/PartyManager.gd	(date 1752085951000)
@@ -0,0 +1,45 @@
+extends Node
+
+signal member_added(character, row_i, slot_i)
+#signal member_removed(character)
+
+var members: Array[CharacterInstance] = []
+
+var formation = [
+	[null, null, null],
+	[null, null, null]
+]
+
+func _ready() -> void:
+	for id in [1, 2]:
+		add_member(id)
+
+func add_member(id: int) -> void:
+	var res := CharacterRegistry.get_character(id)
+	if res:
+		var inst := CharacterInstance.new(res)
+		members.append(inst)
+		var position = add_member_to_formation(inst)
+		
+		if position.size() > 0:
+			var row_i = position[0]
+			var slot_i = position[1]
+			emit_signal("member_added", inst, row_i, slot_i)
+			print("Character added to party: %s" % inst.resource.name)
+		else:
+			push_error("Adding character to formation error: no free slots")
+		
+	else:
+		push_error("Character not found: %s" % id)
+
+func add_member_to_formation(character: CharacterInstance) -> Array:
+	for row_i in range(formation.size()):
+		for slot_i in range(formation[row_i].size()):
+			if not formation[row_i][slot_i]:
+				formation[row_i][slot_i] = character
+				return [row_i, slot_i]
+	return []
+
+#func remove_member(character: CharacterInstance):
+	#members.erase(character)
+	#emit_signal("member_removed", character)
Index: scripts/BattleManager.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/BattleManager.gd b/scripts/BattleManager.gd
new file mode 100644
--- /dev/null	(date 1752238426461)
+++ b/scripts/BattleManager.gd	(date 1752238426461)
@@ -0,0 +1,264 @@
+extends Node
+
+class_name BattleManager
+
+signal current_battler_change(battler: CharacterInstance)
+
+const TURN_THRESHOLD = 1000
+
+@onready var dungeon = get_tree().get_root().get_node("Main/Dungeon")
+@onready var player = get_tree().get_root().get_node("Main/Dungeon/Player")
+@onready var camera: Camera3D = get_viewport().get_camera_3d()
+@onready var battle_ui = $BattleUI
+@onready var party_panel = get_tree().get_root().get_node("Main/PartyPanel")
+@onready var enemy_grid = $EnemyFormation
+
+enum BattleState {
+	IDLE,
+	PROCESS_TURNS,
+	TURN_START,
+	PLAYER_TURN,
+	ENEMY_TURN,
+	ANIMATING,
+	TURN_END,
+	CHECK_END,
+	WIN,
+	LOSE
+}
+
+var current_state = BattleState.IDLE
+
+var party: Array[CharacterInstance] = []
+var enemies: Array[CharacterInstance] = []
+var battlers: Array[CharacterInstance] = []
+var turn_queue: Array[CharacterInstance] = []
+var enemy_slots: Array[Node] = []
+var _pending_action: String = ""
+var _pending_options: Array = []
+var _pending_target: CharacterInstance = null
+var current_battler: CharacterInstance = null
+
+func _ready():
+	$BattleUI.setup(self)
+	TargetingManager.configure_for_battle(camera)
+	TargetingManager.connect("target_clicked", Callable(self, "_on_target_selected"))
+	TargetingManager.connect("target_hovered", Callable(self, "_on_enemy_hovered"))
+	TargetingManager.connect("target_unhovered", Callable(self, "_on_enemy_unhovered"))
+	battle_ui.action_selected.connect(_on_player_action_selected)
+	battle_ui.hide()
+	
+	party = PartyManager.members
+	
+	var balmer = CharacterRegistry.get_character(102)
+	var skeltal = CharacterRegistry.get_character(101)
+	var instance3 = CharacterInstance.new(balmer)
+	var instance4 = CharacterInstance.new(skeltal)
+
+	enemies.append(instance3)
+	enemies.append(instance4)
+	
+	load_enemies()
+
+	battlers = party + enemies
+	for b in battlers:
+		b.turn_meter = 0
+
+	current_state = BattleState.PROCESS_TURNS
+
+func _process(_delta):
+	match current_state:
+		BattleState.PROCESS_TURNS:
+			_process_turn_queue()
+		BattleState.TURN_START:
+			_on_turn_start()
+		BattleState.PLAYER_TURN:
+			pass
+		BattleState.ENEMY_TURN:
+			_process_enemy_turn()
+		BattleState.ANIMATING:
+			pass
+		BattleState.TURN_END:
+			_on_turn_end()
+		BattleState.CHECK_END:
+			_check_end_conditions()
+		BattleState.WIN:
+			_handle_win()
+		BattleState.LOSE:
+			_handle_lose()
+
+func load_enemies():
+	enemy_grid.place_all_enemies(enemies)
+
+func _process_turn_queue():
+	while turn_queue.is_empty():
+		for b in battlers:
+			if b.current_health <= 0:
+				continue
+			b.turn_meter += b.speed
+			if b.turn_meter >= TURN_THRESHOLD and not turn_queue.has(b):
+				turn_queue.append(b)
+
+	if not turn_queue.is_empty():
+		current_battler = turn_queue.pop_front()
+		current_battler.turn_meter -= TURN_THRESHOLD
+		current_state = BattleState.TURN_START
+
+func _on_turn_start():
+	battle_ui._reset_all_button_highlights()
+	if current_battler.current_health <= 0:
+		return
+
+	current_battler.process_effects("on_turn_start")
+	disable_all_targeting()
+		
+	if current_battler in party:
+		current_state = BattleState.PLAYER_TURN
+		emit_signal("current_battler_change", current_battler)
+		print("Player turn for:", current_battler.resource.name)
+		battle_ui.show()
+		_on_player_action_selected("attack", [])
+	else:
+		battle_ui.hide()
+		current_state = BattleState.ENEMY_TURN
+
+func _on_turn_end():
+	#print("%s effects: %s" % [current_battler.resource.name, current_battler.effects])
+	current_battler.process_effects("on_turn_end")
+	current_battler = null
+	current_state = BattleState.CHECK_END
+		
+func _on_player_action_selected(action: String, options: Array):
+	_pending_action = action
+	_pending_options = options
+	battle_ui.highlight_action(action)
+	
+	match action:
+		"defend":
+			_handle_defend()
+			current_state = BattleState.CHECK_END
+			return
+		"flee":
+			_handle_flee()
+			current_state = BattleState.CHECK_END
+			return
+		"attack":
+			enable_all_targeting()
+			return
+		"skill":
+			enable_all_targeting()
+			return
+		"item":
+			enable_all_targeting()
+			return
+
+func _on_target_selected(target_slot):
+	disable_all_targeting()
+	_pending_target = target_slot.character_instance
+	_resolve_player_action()
+
+func _resolve_player_action():
+	_perform_player_action(_pending_action, _pending_target)
+	current_state = BattleState.TURN_END
+
+func _perform_player_action(action: String, target: CharacterInstance):
+	match action:
+		"attack":
+			var atk = AttackAction.new()
+			atk.attacker = current_battler
+			atk.defender   = target
+			atk.base_value = current_battler.attack_power
+			var result    = DamageResolver.apply_attack(atk)
+		"skill":
+			var skill = SkillAction.new()
+			skill.attacker   = current_battler
+			skill.defender     = target
+			skill.skill = _pending_options[0]
+			skill.effects = _pending_options[0].effects
+			skill.base_value = _pending_options[0].damage
+			var result = DamageResolver.apply_skill(skill)
+		"item":
+			print(current_battler.resource.name, " used item")
+
+func _process_enemy_turn():
+	if current_battler == null:
+		current_state = BattleState.CHECK_END
+		return
+
+	var valid_targets = party.filter(func(p): return p.current_health > 0)
+	if valid_targets.is_empty():
+		current_state = BattleState.CHECK_END
+		return
+
+	var target = valid_targets.pick_random()
+	current_state = BattleState.ANIMATING
+	await get_tree().create_timer(0.5).timeout
+
+	var atk = AttackAction.new()
+	atk.attacker = current_battler
+	atk.defender   = target
+	atk.base_value = current_battler.attack_power
+	var result    = DamageResolver.apply_attack(atk)
+	
+	current_state = BattleState.TURN_END
+
+func _handle_defend():
+	print(current_battler.resource.name, " is defending!")
+
+func _handle_flee():
+	var success = randf() < 0.5
+	if success:
+		print("Party flees successfully!")
+		EncounterManager.end_encounter("flee")
+		current_state = BattleState.IDLE
+		get_tree().get_root().get_node("Main").remove_child(self)
+		queue_free()
+	else:
+		print("Failed to flee!")
+
+func _check_end_conditions():
+	if party.all(func(p): return p.current_health <= 0):
+		current_state = BattleState.LOSE
+	elif enemies.all(func(e): return e.current_health <= 0):
+		current_state = BattleState.WIN
+	else:
+		current_state = BattleState.PROCESS_TURNS
+
+func _handle_win():
+	print("Victory! Handle rewards here.")
+	EncounterManager.end_encounter("win")
+	current_state = BattleState.IDLE
+	get_tree().get_root().get_node("Main").remove_child(self)
+	queue_free()
+
+func _handle_lose():
+	print("Defeat! Handle game over here.")
+	EncounterManager.end_encounter("lose")
+	current_state = BattleState.IDLE
+	get_tree().get_root().get_node("Main").remove_child(self)
+	queue_free()
+
+func _on_enemy_hovered(target: EnemySlot):
+	target.hover()
+	
+func _on_enemy_unhovered(target: EnemySlot):
+	target.unhover()
+
+func disable_all_targeting():
+	TargetingManager.disable_targeting()
+	party_panel.disable_targeting()
+
+func enable_all_targeting():
+	TargetingManager.enable_targeting()
+	party_panel.enable_targeting()
+
+func enable_enemy_targeting():
+	TargetingManager.enable_targeting()
+
+func disable_enemy_targeting():
+	TargetingManager.disable_targeting()
+
+func enable_ally_targeting():
+	party_panel.enable_targeting()
+	
+func disable_ally_targeting():
+	party_panel.disable_targeting()
Index: scripts/MapManager.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/MapManager.gd.uid b/scripts/MapManager.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/MapManager.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://q7i502lpamia
Index: scripts/EnemyGrid.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EnemyGrid.gd b/scripts/EnemyGrid.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/EnemyGrid.gd	(date 1752085951000)
@@ -0,0 +1,71 @@
+extends Node3D
+
+const FRONT_ROW_Z = -2
+const BACK_ROW_Z = 0
+const SLOT_SPACING_X = 2.5
+const MAX_SLOTS = 5
+
+const Enemy3DScene = preload("res://scenes/EnemySlot.tscn")
+
+var occupied_slots_front = []
+var occupied_slots_back = []
+
+func _ready():
+	occupied_slots_front.resize(MAX_SLOTS)
+	occupied_slots_back.resize(MAX_SLOTS)
+
+	for i in range(MAX_SLOTS):
+		occupied_slots_front[i] = false
+		occupied_slots_back[i] = false
+
+func place_all_enemies(enemies: Array):
+	var front_enemies = []
+	var back_enemies = []
+
+	for enemy in enemies:
+		if enemy.resource.prefers_front_row:
+			if front_enemies.size() < MAX_SLOTS:
+				front_enemies.append(enemy)
+			elif back_enemies.size() < MAX_SLOTS:
+				back_enemies.append(enemy)
+			else:
+				push_warning("Too many enemies!")
+		else:
+			if back_enemies.size() < MAX_SLOTS:
+				back_enemies.append(enemy)
+			elif front_enemies.size() < MAX_SLOTS:
+				front_enemies.append(enemy)
+			else:
+				push_warning("Too many enemies!")
+
+	var front_positions = get_centered_positions(front_enemies.size(), FRONT_ROW_Z)
+	var back_positions = get_centered_positions(back_enemies.size(), BACK_ROW_Z)
+
+	for i in range(front_enemies.size()):
+		var enemy_node = Enemy3DScene.instantiate()
+		enemy_node.bind(front_enemies[i])
+		enemy_node.position = front_positions[i]
+		add_child(enemy_node)
+		occupied_slots_front[i] = true
+
+	for i in range(back_enemies.size()):
+		var enemy_node = Enemy3DScene.instantiate()
+		enemy_node.bind(back_enemies[i])
+		enemy_node.position = back_positions[i]
+		add_child(enemy_node)
+		occupied_slots_back[i] = true
+
+func clear_slots():
+	for i in range(MAX_SLOTS):
+		occupied_slots_front[i] = false
+		occupied_slots_back[i] = false
+
+func get_centered_positions(count: int, z: float) -> Array:
+	var positions = []
+	if count == 0:
+		return positions
+	var total_width = (count - 1) * SLOT_SPACING_X
+	for i in range(count):
+		var x = -total_width / 2 + i * SLOT_SPACING_X
+		positions.append(Vector3(x, 0, z))
+	return positions
Index: scripts/MapData.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/MapData.gd b/scripts/MapData.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/MapData.gd	(date 1752085951000)
@@ -0,0 +1,10 @@
+extends Resource
+
+class_name MapData
+
+@export var id: String = ""
+@export var name: String = ""
+@export var data: Array = []
+@export var theme: String = ""
+@export var start_pos: Vector2i = Vector2i.ZERO
+@export var transitions: Dictionary = {}
Index: scripts/CharacterResource.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/CharacterResource.gd b/scripts/CharacterResource.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/CharacterResource.gd	(date 1752085951000)
@@ -0,0 +1,22 @@
+extends Resource
+
+class_name CharacterResource
+
+enum Gender {MALE, FEMALE}
+
+@export var gender: Gender
+@export var id: int = 0
+
+@export var character_body: PackedScene
+@export var portrait: Texture
+@export var name: String = "Unnamed"
+@export var attack_power: int
+@export var health_points: int = 20
+@export var mana_points: int = 10
+@export var speed: int = 10
+@export var experience: int = 0
+@export var slot_width: int = 1
+@export var prefers_front_row: bool = true
+@export var default_skills: Array[Skill] = []
+@export var default_effects: Array[Effect] = []
+@export var default_damage_type: DamageTypes.Type
Index: scripts/UIBattle.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/UIBattle.gd.uid b/scripts/UIBattle.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/UIBattle.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://b4kodgy0qo0cl
Index: scripts/PartyManager.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/PartyManager.gd.uid b/scripts/PartyManager.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/PartyManager.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://c2q4vjgbhuq4h
Index: scripts/ConvertTileMapLayer.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/ConvertTileMapLayer.gd b/scripts/ConvertTileMapLayer.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/ConvertTileMapLayer.gd	(date 1752085951000)
@@ -0,0 +1,62 @@
+extends Node
+
+@export var map_id: String = ""
+@export var map_name: String = ""
+@export var map_layer: TileMapLayer
+@export var event_layer: TileMapLayer
+@export var output_resource_path: String = "res://maps/unnamed_map.tres"
+@export var map_theme: String = ""
+@export var start_pos: Vector2i = Vector2i(1, 1)
+
+func _ready():
+	convert_to_resource()
+
+func convert_to_resource():
+	if not map_layer or not event_layer:
+		push_error("MapLayer or EventLayer not assigned.")
+		return
+
+	var used_rect = map_layer.get_used_rect()
+	var map_width = used_rect.size.x
+	var map_height = used_rect.size.y
+
+	var data = []
+	for y in range(used_rect.position.y, used_rect.position.y + map_height):
+		var row = []
+		for x in range(used_rect.position.x, used_rect.position.x + map_width):
+			var tile = {"type": "empty", "style": "default", "event": null, "encounter": null, "arena": null, "transition": null}
+
+			# Process MapLayer
+			var map_cell = map_layer.get_cell_source_id(Vector2i(x, y))
+			if map_cell != -1:
+				var map_tile_data = map_layer.get_cell_tile_data(Vector2i(x, y))
+				if map_tile_data:
+					tile["type"] = map_tile_data.get_custom_data("type") if map_tile_data.get_custom_data("type") else "empty"
+					tile["style"] = map_tile_data.get_custom_data("style") if map_tile_data.get_custom_data("style") else "default"
+
+			# Process EventLayer
+			var event_cell = event_layer.get_cell_source_id(Vector2i(x, y))
+			if event_cell != -1:
+				var event_tile_data = event_layer.get_cell_tile_data(Vector2i(x, y))
+				if event_tile_data:
+					var event = event_tile_data.get_custom_data("event")
+					var encounter = event_tile_data.get_custom_data("encounter")
+					var arena = event_tile_data.get_custom_data("arena")
+					var transition = event_tile_data.get_custom_data("transition")
+					tile["event"] = event if event and event != "" else null
+					tile["encounter"] = encounter if encounter and encounter != "" else null
+					tile["arena"] = arena if arena and arena != "" else null
+					tile["transition"] = transition if transition and transition != "" else null
+
+			row.append(tile)
+		data.append(row)
+
+	var map_resource = MapData.new()
+	map_resource.id = map_id
+	map_resource.name = map_name
+	map_resource.data = data
+	map_resource.theme = map_theme
+	map_resource.start_pos = start_pos
+
+	ResourceSaver.save(map_resource, output_resource_path)
+	print("Map resource saved to: %s" % output_resource_path)
Index: scripts/CharacterInstance.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/CharacterInstance.gd.uid b/scripts/CharacterInstance.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/CharacterInstance.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://co4wwf4i7aavs
Index: scenes/tiles/default/Floor.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/tiles/default/Floor.tscn b/scenes/tiles/default/Floor.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/tiles/default/Floor.tscn	(date 1752085951000)
@@ -0,0 +1,20 @@
+[gd_scene load_steps=4 format=3 uid="uid://csx3p10yv2ehm"]
+
+[ext_resource type="Texture2D" uid="uid://dmj0vepc1lrgr" path="res://DQG5i7nW0AAVxxU.jpg" id="1_s2km7"]
+
+[sub_resource type="BoxMesh" id="BoxMesh_spmh5"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_y6olu"]
+albedo_color = Color(0.646029, 0.646029, 0.646029, 1)
+albedo_texture = ExtResource("1_s2km7")
+normal_scale = 16.0
+ao_light_affect = 1.0
+ao_texture_channel = 1
+uv1_scale = Vector3(3, 3, 3)
+
+[node name="Floor" type="Node3D"]
+
+[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 0.1, 0, 0, 0, 2, 0, 0, 0)
+mesh = SubResource("BoxMesh_spmh5")
+surface_material_override/0 = SubResource("StandardMaterial3D_y6olu")
Index: scenes/tiles/default/Wall.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/tiles/default/Wall.tscn b/scenes/tiles/default/Wall.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/tiles/default/Wall.tscn	(date 1752085951000)
@@ -0,0 +1,70 @@
+[gd_scene load_steps=6 format=3 uid="uid://rdqclwghxpy1"]
+
+[ext_resource type="Texture2D" uid="uid://c6lrs8nmxuj34" path="res://7fe5e10d720f9206f799410f554c0398fd6a2fd7.png" id="1_dn2c0"]
+
+[sub_resource type="BoxMesh" id="BoxMesh_fgjl5"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ajl86"]
+albedo_texture = ExtResource("1_dn2c0")
+uv1_scale = Vector3(1.5, 1.5, 1.5)
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_l6igm"]
+shading_mode = 0
+
+[sub_resource type="BoxMesh" id="BoxMesh_l6igm"]
+material = SubResource("StandardMaterial3D_l6igm")
+
+[node name="Wall" type="Node3D"]
+
+[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 1.5, 0)
+mesh = SubResource("BoxMesh_fgjl5")
+surface_material_override/0 = SubResource("StandardMaterial3D_ajl86")
+
+[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, 1, 3, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, -1, 3, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D4" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 3, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D5" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 3, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D6" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 0.05, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D9" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 0.05, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D7" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, 1, 0.05, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D8" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, -1, 0.05, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D10" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, 1, 1.525, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D11" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, 1, 1.525, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D12" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, -1, 1.525, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D13" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, -1, 1.525, 1)
+mesh = SubResource("BoxMesh_l6igm")
Index: scenes/_editor/converter.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/_editor/converter.tscn b/scenes/_editor/converter.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/_editor/converter.tscn	(date 1752085951000)
@@ -0,0 +1,6 @@
+[gd_scene load_steps=2 format=3 uid="uid://b45pw175gxxwy"]
+
+[ext_resource type="Script" uid="uid://c4ahdxkhm0pq5" path="res://scripts/ConvertTileMapLayer.gd" id="1_xbosk"]
+
+[node name="Converter" type="Node"]
+script = ExtResource("1_xbosk")
Index: scenes/_editor/event_layer.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/_editor/event_layer.tscn b/scenes/_editor/event_layer.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/_editor/event_layer.tscn	(date 1752085951000)
@@ -0,0 +1,11 @@
+[gd_scene load_steps=2 format=3 uid="uid://rqgybtm3top4"]
+
+[sub_resource type="TileSet" id="TileSet_fp8u1"]
+tile_size = Vector2i(200, 200)
+custom_data_layer_0/name = "encounter"
+custom_data_layer_0/type = 27
+custom_data_layer_1/name = "event"
+custom_data_layer_1/type = 27
+
+[node name="EventLayer" type="TileMapLayer"]
+tile_set = SubResource("TileSet_fp8u1")
Index: scenes/_editor/map_layer.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/_editor/map_layer.tscn b/scenes/_editor/map_layer.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/_editor/map_layer.tscn	(date 1752085951000)
@@ -0,0 +1,11 @@
+[gd_scene load_steps=2 format=3 uid="uid://cpfoahcwodyf2"]
+
+[sub_resource type="TileSet" id="TileSet_upmfc"]
+tile_size = Vector2i(200, 200)
+custom_data_layer_0/name = "style"
+custom_data_layer_0/type = 4
+custom_data_layer_1/name = "type"
+custom_data_layer_1/type = 4
+
+[node name="MapLayer" type="TileMapLayer"]
+tile_set = SubResource("TileSet_upmfc")
Index: scenes/dungeon/dungeon.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/dungeon/dungeon.tscn b/scenes/dungeon/dungeon.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/dungeon/dungeon.tscn	(date 1752085951000)
@@ -0,0 +1,8 @@
+[gd_scene load_steps=2 format=3 uid="uid://0g8fcobbvi84"]
+
+[ext_resource type="Script" uid="uid://x2dulqp2hx2s" path="res://scenes/dungeon/dungeon.gd" id="1_6elmv"]
+
+[node name="Dungeon" type="Node3D"]
+script = ExtResource("1_6elmv")
+
+[node name="Tiles" type="Node3D" parent="."]
Index: scenes/dungeon/dungeon.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/dungeon/dungeon.gd b/scenes/dungeon/dungeon.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/dungeon/dungeon.gd	(date 1752085951000)
@@ -0,0 +1,93 @@
+extends Node3D
+
+@onready var tiles_container = $Tiles
+@onready var transition_rect = get_tree().get_root().get_node("Main/TransitionRect")
+var map_data = []
+var player: Node3D
+
+const TILE_SIZE = 2.0
+
+func _ready():
+	player = get_tree().get_root().get_node("Main/Dungeon/Player")
+	
+	
+	EncounterManager.connect("encounter_started", Callable(self, "_on_encounter_started"))
+	EncounterManager.connect("encounter_ended", Callable(self, "_on_encounter_ended"))
+	player.connect("player_moved", Callable(self, "_on_player_moved"))
+	player.connect("start_encounter", Callable(EncounterManager, "start_encounter"))
+	player.connect("map_transition", Callable(self, "transition_to_map"))
+	
+	transition_rect.modulate.a = 0.0
+	load_map("area_00")
+
+func load_map(map_id: String):
+	var map_resource = MapManager.get_map(map_id)
+	print(map_resource)
+	
+	if MapInstance.map_id != map_id:
+		print("Dungeon: Loading new map")
+		MapInstance.hydrate_from_resource(map_resource)
+	
+	map_data = MapInstance.map_data
+	var theme = MapInstance.theme
+	var player_position = MapInstance.player_position
+	print(player_position)
+	
+	for child in tiles_container.get_children():
+		child.queue_free()
+	
+	for y in range(map_data.size()):
+		for x in range(map_data[y].size()):
+			var tile = map_data[y][x]
+			var position = Vector3(x * TILE_SIZE, 0, y * TILE_SIZE)
+
+			if tile["type"] == "floor":
+				var floor_scene = TileFactory.get_tile_style(theme, tile["type"], tile["style"])
+				var floor_tile = floor_scene.instantiate()
+				tiles_container.add_child(floor_tile)
+				floor_tile.global_position = position
+				floor_tile.set_meta("event", tile["event"])
+				floor_tile.set_meta("encounter", tile["encounter"])
+				floor_tile.set_meta("arena", tile["arena"])
+			
+			if tile["type"] == "wall":
+				var wall_scene = TileFactory.get_tile_style(theme, tile["type"], tile["style"])
+				var wall = wall_scene.instantiate()
+				tiles_container.add_child(wall)
+				wall.global_position = position + Vector3(0, 0, 0)
+				wall.set_meta("event", tile["event"])
+				wall.set_meta("encounter", tile["encounter"])
+				wall.set_meta("arena", tile["arena"])
+	
+	player.set_grid_pos(player_position)
+
+func _on_encounter_started(data: Dictionary):
+	player.disable_all_movement()
+	player.global_position = Vector3(0, 1, -8)
+	player.rotation_degrees.y = 180
+	self.visible = false
+
+func handle_event(event: String):
+	print(event)
+
+func transition_to_map(map_id: String):
+	player.disable_all_movement()
+	var tween = get_tree().create_tween()
+	tween.tween_property(transition_rect, "modulate:a", 1.0, 0.5)
+	await tween.finished
+	load_map(map_id)
+	tween = get_tree().create_tween()
+	tween.tween_property(transition_rect, "modulate:a", 0.0, 0.5)
+	await tween.finished
+	player.enable_all_movement()
+
+func _on_player_moved(data: Dictionary):
+	MapInstance.update_player_position(data["grid_position"])
+
+func _on_encounter_ended(result):
+	print("Back from battle with result:", result)
+	# TODO: restore map state
+	self.visible = true
+	
+	load_map(MapInstance.map_id)
+	player.enable_all_movement()
Index: scenes/dungeon/dungeon.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/dungeon/dungeon.gd.uid b/scenes/dungeon/dungeon.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/dungeon/dungeon.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://x2dulqp2hx2s
Index: characters/foes/Balmer/Balmer.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/foes/Balmer/Balmer.tres b/characters/foes/Balmer/Balmer.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/foes/Balmer/Balmer.tres	(date 1752085951000)
@@ -0,0 +1,18 @@
+[gd_resource type="Resource" script_class="CharacterResource" load_steps=3 format=3 uid="uid://dq6o86j5axtjb"]
+
+[ext_resource type="PackedScene" uid="uid://ddaoggfmpimc3" path="res://characters/foes/Balmer/body.tscn" id="1_3afh5"]
+[ext_resource type="Script" uid="uid://bwn4gpkaijqsg" path="res://scripts/CharacterResource.gd" id="1_l56jw"]
+
+[resource]
+script = ExtResource("1_l56jw")
+id = 102
+character_body = ExtResource("1_3afh5")
+name = "Balmer"
+attack_power = 5
+health_points = 22
+mana_points = 11
+speed = 8
+experience = 0
+slot_width = 1
+prefers_front_row = false
+metadata/_custom_type_script = "uid://bwn4gpkaijqsg"
Index: characters/foes/Skeltal/Skeltal.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/foes/Skeltal/Skeltal.tres b/characters/foes/Skeltal/Skeltal.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/foes/Skeltal/Skeltal.tres	(date 1752085951000)
@@ -0,0 +1,23 @@
+[gd_resource type="Resource" script_class="CharacterResource" load_steps=5 format=3 uid="uid://wuehd43nakji"]
+
+[ext_resource type="Script" uid="uid://bp0biy0knxw2o" path="res://effect/Effect.gd" id="1_73qgh"]
+[ext_resource type="Script" uid="uid://dq4acpkde276p" path="res://skills/Skill.gd" id="1_cc3t0"]
+[ext_resource type="Script" uid="uid://bwn4gpkaijqsg" path="res://scripts/CharacterResource.gd" id="1_km1me"]
+[ext_resource type="Resource" uid="uid://badgfln40mudj" path="res://effect/status/PoisonRes.tres" id="2_d15h4"]
+
+[resource]
+script = ExtResource("1_km1me")
+gender = 0
+id = 101
+name = "Skeleton"
+attack_power = 4
+health_points = 300
+mana_points = 10
+speed = 8
+experience = 0
+slot_width = 1
+prefers_front_row = true
+default_skills = Array[ExtResource("1_cc3t0")]([null])
+default_effects = Array[ExtResource("1_73qgh")]([ExtResource("2_d15h4")])
+default_damage_type = 0
+metadata/_custom_type_script = "uid://bwn4gpkaijqsg"
Index: characters/foes/_fallback/boo.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/foes/_fallback/boo.tres b/characters/foes/_fallback/boo.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/foes/_fallback/boo.tres	(date 1752085951000)
@@ -0,0 +1,18 @@
+[gd_resource type="Resource" script_class="CharacterResource" load_steps=3 format=3 uid="uid://btr7k6tmwt3qi"]
+
+[ext_resource type="Script" uid="uid://bwn4gpkaijqsg" path="res://scripts/CharacterResource.gd" id="1_04kyn"]
+[ext_resource type="PackedScene" uid="uid://coq12fusghinq" path="res://characters/foes/_fallback/body.tscn" id="1_a2n8i"]
+
+[resource]
+script = ExtResource("1_04kyn")
+id = 9999
+character_body = ExtResource("1_a2n8i")
+name = "Boo"
+attack_power = 1
+health_points = 20
+mana_points = 10
+speed = 10
+experience = 0
+slot_width = 1
+prefers_front_row = true
+metadata/_custom_type_script = "uid://bwn4gpkaijqsg"
Index: characters/foes/_fallback/body.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/foes/_fallback/body.tscn b/characters/foes/_fallback/body.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/foes/_fallback/body.tscn	(date 1752085951000)
@@ -0,0 +1,34 @@
+[gd_scene load_steps=5 format=3 uid="uid://coq12fusghinq"]
+
+[ext_resource type="Texture2D" uid="uid://dc2rf27qhxx4g" path="res://ghost.png" id="1_vw63s"]
+
+[sub_resource type="BoxShape3D" id="BoxShape3D_l2ci1"]
+size = Vector3(1.27087, 1.60907, 0.1)
+
+[sub_resource type="AtlasTexture" id="AtlasTexture_rldk6"]
+atlas = ExtResource("1_vw63s")
+region = Rect2(0, 0, 89, 88)
+
+[sub_resource type="SpriteFrames" id="SpriteFrames_e6t04"]
+animations = [{
+"frames": [{
+"duration": 1.0,
+"texture": SubResource("AtlasTexture_rldk6")
+}],
+"loop": true,
+"name": &"Idle",
+"speed": 5.0
+}]
+
+[node name="Body" type="StaticBody3D"]
+collision_layer = 4
+
+[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.123597, 1.23832, 0)
+shape = SubResource("BoxShape3D_l2ci1")
+
+[node name="Sprite" type="AnimatedSprite3D" parent="."]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.1986, 0)
+pixel_size = 0.02
+sprite_frames = SubResource("SpriteFrames_e6t04")
+animation = &"Idle"
Index: characters/allies/Lili/Lili.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/allies/Lili/Lili.tres b/characters/allies/Lili/Lili.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/allies/Lili/Lili.tres	(date 1752085951000)
@@ -0,0 +1,20 @@
+[gd_resource type="Resource" script_class="CharacterResource" load_steps=3 format=3 uid="uid://dh8kad7brt53b"]
+
+[ext_resource type="Script" uid="uid://dq4acpkde276p" path="res://skills/Skill.gd" id="1_5gn58"]
+[ext_resource type="Script" uid="uid://bwn4gpkaijqsg" path="res://scripts/CharacterResource.gd" id="1_tuon3"]
+
+[resource]
+script = ExtResource("1_tuon3")
+gender = 1
+id = 1
+name = "Lili"
+attack_power = 8
+health_points = 200
+mana_points = 10
+speed = 11
+experience = 0
+slot_width = 1
+prefers_front_row = false
+default_skills = Array[ExtResource("1_5gn58")]([])
+default_damage_type = 0
+metadata/_custom_type_script = "uid://bwn4gpkaijqsg"
Index: characters/allies/Skelly/Skelly.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/allies/Skelly/Skelly.tres b/characters/allies/Skelly/Skelly.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/allies/Skelly/Skelly.tres	(date 1752085951000)
@@ -0,0 +1,21 @@
+[gd_resource type="Resource" script_class="CharacterResource" load_steps=4 format=3 uid="uid://bbddeexd37t5i"]
+
+[ext_resource type="Script" uid="uid://bwn4gpkaijqsg" path="res://scripts/CharacterResource.gd" id="1_s17id"]
+[ext_resource type="Script" uid="uid://dq4acpkde276p" path="res://skills/Skill.gd" id="1_yod8j"]
+[ext_resource type="Resource" uid="uid://cfunb7l71n1np" path="res://skills/precision_strike.tres" id="2_7so24"]
+
+[resource]
+script = ExtResource("1_s17id")
+gender = 0
+id = 2
+name = "Skelly"
+attack_power = 10
+health_points = 200
+mana_points = 10
+speed = 12
+experience = 0
+slot_width = 1
+prefers_front_row = true
+default_skills = Array[ExtResource("1_yod8j")]([ExtResource("2_7so24")])
+default_damage_type = 1
+metadata/_custom_type_script = "uid://bwn4gpkaijqsg"
Index: scripts/UIPartyContainer.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/UIPartyContainer.gd b/scripts/UIPartyContainer.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/UIPartyContainer.gd	(date 1752085951000)
@@ -0,0 +1,54 @@
+extends Panel
+
+@onready var party: PartyManager
+@onready var formation = [
+	[
+		$PanelContainer/PartyContainer/FrontRow/PartyMemberSlot1/PartyMember,
+		$PanelContainer/PartyContainer/FrontRow/PartyMemberSlot2/PartyMember,
+		$PanelContainer/PartyContainer/FrontRow/PartyMemberSlot3/PartyMember
+	],
+ 	[
+		$PanelContainer/PartyContainer/BackRow/PartyMemberSlot1/PartyMember,
+		$PanelContainer/PartyContainer/BackRow/PartyMemberSlot2/PartyMember,
+		$PanelContainer/PartyContainer/BackRow/PartyMemberSlot3/PartyMember
+	]
+] 
+
+const UIPartyMemberScene = preload("res://scenes/UIPartyMemberSlot.tscn")
+
+func _ready():
+	PartyManager.connect("member_added", Callable(self, "_on_member_added"))
+	
+	for row_index in range(PartyManager.formation.size()):
+		if not PartyManager.formation[row_index]:
+			continue
+		for slot_index in range(PartyManager.formation[row_index].size()):
+			if not PartyManager.formation[row_index][slot_index]:
+				var slot: PartyMemberSlot = formation[row_index][slot_index]
+				slot.hide_info()
+				continue
+			_on_member_added(PartyManager.formation[row_index][slot_index], row_index, slot_index)
+
+func _on_member_added(character: CharacterInstance, row_index: int, slot_index: int):
+	var character_ui = formation[row_index][slot_index]
+	character_ui.bind(character)
+	character_ui.show()
+	
+	character.connect("health_changed", Callable(character_ui, "_on_health_changed"))
+
+#func _on_member_removed(character: CharacterInstance):
+	#for child in get_children():
+		#if child.character == character:
+			#remove_child(child)
+			#child.queue_free()
+			#break
+
+func disable_targeting():
+	for row in formation:
+		for slot in row:
+			slot.disable_slot_targeting()
+
+func enable_targeting():
+	for row in formation:
+		for slot in row:
+			slot.enable_slot_targeting()
Index: scripts/EnemySlot.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EnemySlot.gd b/scripts/EnemySlot.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/EnemySlot.gd	(date 1752085951000)
@@ -0,0 +1,50 @@
+extends Node3D
+
+class_name EnemySlot
+
+var character_instance: CharacterInstance
+var sprite_size
+var sprite_instance: AnimatedSprite3D
+@export var fallback: CharacterResource
+
+
+func bind(character: CharacterInstance):
+	character_instance = character
+	
+	for child in get_children():
+		if child is StaticBody3D:
+			child.queue_free()
+
+	var body_scene = character.resource.character_body
+	
+	if not body_scene:
+		body_scene = fallback.character_body
+		print("Body is missing for character: %s id: %s. Defaulting to fallback enemy", [getName(), character_instance.resource.id])
+
+	var body_instance = body_scene.instantiate()
+	sprite_instance = body_instance.get_node("Sprite")
+	self.add_child(body_instance)
+
+	if sprite_instance:
+		sprite_instance.play("Idle")
+	else:
+		print("Sprite is missing for character: %s id: %s", [getName(), character_instance.resource.id])
+	
+	#if character.resource.portrait:
+		#$Portrait.texture = character.resource.portrait
+	$NameLabel.text = character.resource.name
+
+func getName():
+	return character_instance.resource.name
+
+func hover():
+	sprite_instance.modulate = Color(1.0, 0.6, 0.6)
+
+func unhover():
+	sprite_instance.modulate = Color(1.0, 1.0, 1.0)
+
+func clear():
+	character_instance = null
+	unhover()
+	#$Portrait.texture = null
+	$NameLabel.text = ""
Index: characters/foes/Balmer/body.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/characters/foes/Balmer/body.tscn b/characters/foes/Balmer/body.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/characters/foes/Balmer/body.tscn	(date 1752085951000)
@@ -0,0 +1,58 @@
+[gd_scene load_steps=8 format=3 uid="uid://ddaoggfmpimc3"]
+
+[ext_resource type="Texture2D" uid="uid://cjh84x068jx5c" path="res://balmer-andromalius-57x88-alpha.png" id="1_h6klw"]
+
+[sub_resource type="BoxShape3D" id="BoxShape3D_dwbtb"]
+size = Vector3(1.46509, 2.61436, 0.1)
+
+[sub_resource type="AtlasTexture" id="AtlasTexture_31n3i"]
+atlas = ExtResource("1_h6klw")
+region = Rect2(228, 176, 57, 88)
+
+[sub_resource type="AtlasTexture" id="AtlasTexture_rfecp"]
+atlas = ExtResource("1_h6klw")
+region = Rect2(285, 176, 57, 88)
+
+[sub_resource type="AtlasTexture" id="AtlasTexture_soaxv"]
+atlas = ExtResource("1_h6klw")
+region = Rect2(342, 176, 57, 88)
+
+[sub_resource type="AtlasTexture" id="AtlasTexture_hddcw"]
+atlas = ExtResource("1_h6klw")
+region = Rect2(399, 176, 57, 88)
+
+[sub_resource type="SpriteFrames" id="SpriteFrames_lwah8"]
+animations = [{
+"frames": [{
+"duration": 1.0,
+"texture": SubResource("AtlasTexture_31n3i")
+}, {
+"duration": 1.0,
+"texture": SubResource("AtlasTexture_rfecp")
+}, {
+"duration": 1.0,
+"texture": SubResource("AtlasTexture_soaxv")
+}, {
+"duration": 1.0,
+"texture": SubResource("AtlasTexture_hddcw")
+}],
+"loop": true,
+"name": &"Idle",
+"speed": 6.0
+}]
+
+[node name="StaticBody3D" type="StaticBody3D"]
+collision_layer = 4
+
+[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.020874, 1.74889, 0)
+shape = SubResource("BoxShape3D_dwbtb")
+
+[node name="Sprite" type="AnimatedSprite3D" parent="."]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.73461, 0)
+pixel_size = 0.03
+texture_filter = 0
+sprite_frames = SubResource("SpriteFrames_lwah8")
+animation = &"Idle"
+frame = 3
+frame_progress = 0.162162
Index: scripts/EnemyGrid.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EnemyGrid.gd.uid b/scripts/EnemyGrid.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/EnemyGrid.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://w5crfr45qebk
Index: scripts/UIPartyMemberSlot.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/UIPartyMemberSlot.gd.uid b/scripts/UIPartyMemberSlot.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/UIPartyMemberSlot.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://br1f8omrid7gi
Index: scripts/MapInstance.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/MapInstance.gd b/scripts/MapInstance.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/MapInstance.gd	(date 1752085951000)
@@ -0,0 +1,36 @@
+extends Node
+
+var map_id: String = ""
+var current_map_name: String = ""
+var theme: String = ""
+var map_data = []
+var player_position = Vector2i()
+var triggered_events = {}
+var cleared_encounters = {}
+var transitions = {}
+
+func hydrate_from_resource(map_resource):
+	map_id = map_resource.id
+	current_map_name = map_resource.name
+	theme = map_resource.theme
+	map_data = map_resource.data
+	player_position = map_resource.start_pos
+	#triggered_events.clear()
+	#cleared_encounters.clear()
+	# Initialize any other persistent data needed
+
+func update_player_position(pos: Vector2i):
+	print(player_position)
+	player_position = pos
+
+#func mark_event_triggered(event_id: String):
+	#triggered_events[event_id] = true
+#
+#func is_event_triggered(event_id: String) -> bool:
+	#return triggered_events.has(event_id)
+#
+#func mark_encounter_cleared(encounter_id: String):
+	#cleared_encounters[encounter_id] = true
+#
+#func is_encounter_cleared(encounter_id: String) -> bool:
+	#return cleared_encounters.has(encounter_id)
Index: scripts/EncounterManager.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EncounterManager.gd b/scripts/EncounterManager.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/EncounterManager.gd	(date 1752085951000)
@@ -0,0 +1,46 @@
+extends Node
+
+signal encounter_started(encounter_data)
+signal encounter_ended(result)
+
+@onready var transition_battle = get_tree().get_root().get_node("Main/BattleTransition")
+
+var current_battle_scene: Node = null
+
+func _ready():
+	transition_battle.modulate.a = 0.0
+
+func is_encounter(tile: Dictionary):
+	return "encounter" in tile and tile["encounter"] 
+
+func start_encounter(encounter_data: Dictionary):
+	print("EncounterManager: Starting encounter:", encounter_data)
+	var arena_id = encounter_data["arena"]
+	var arena = MapManager.get_arena(arena_id)
+	
+	var tween = get_tree().create_tween()
+	tween.tween_property(transition_battle, "modulate:a", 1.0, 0.5)
+	await tween.finished
+	
+	current_battle_scene = arena.instantiate()
+	get_tree().get_root().get_node("Main").add_child(current_battle_scene)
+	emit_signal("encounter_started", encounter_data)
+	
+	tween = get_tree().create_tween()
+	tween.tween_property(transition_battle, "modulate:a", 0.0, 0.5)
+	await tween.finished
+
+func end_encounter(result):
+	print("EncounterManager: Ending encounter with result:", result)
+	
+	#if current_battle_scene and current_battle_scene.is_inside_tree():
+		#current_battle_scene.queue_free()
+		#current_battle_scene = null
+	
+	# Show dungeon again
+	#var dungeon = get_tree().get_root().get_node("Main/Dungeon")
+	#dungeon.visible = true
+	
+	# You might want to reset player states, reposition, or restore map here
+	
+	emit_signal("encounter_ended", result)
Index: scripts/CharacterResource.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/CharacterResource.gd.uid b/scripts/CharacterResource.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/CharacterResource.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://bwn4gpkaijqsg
Index: scripts/MapData.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/MapData.gd.uid b/scripts/MapData.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/MapData.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://i6llluly1w8
Index: scripts/BattleManager.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/BattleManager.gd.uid b/scripts/BattleManager.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/BattleManager.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://djga0vllljxhw
Index: scripts/CharacterRegistry.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/CharacterRegistry.gd b/scripts/CharacterRegistry.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/CharacterRegistry.gd	(date 1752085951000)
@@ -0,0 +1,24 @@
+extends Node
+
+var characters: Dictionary[int, CharacterResource] = {}
+
+func _ready() -> void:
+	_register_all()
+
+func _register_all() -> void:
+	var res_paths = [
+		"res://characters/allies/Lili/Lili.tres",
+		"res://characters/allies/Skelly/Skelly.tres",
+		"res://characters/foes/Skeltal/Skeltal.tres",
+		"res://characters/foes/Balmer/Balmer.tres",
+	]
+	for path in res_paths:
+		var res = ResourceLoader.load(path)
+		if res:
+			register_character(res)
+
+func register_character(res: CharacterResource) -> void:
+	characters[res.id] = res
+
+func get_character(id: int) -> CharacterResource:
+	return characters.get(id)
Index: effect/status/PoisonEffectRes.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/status/PoisonEffectRes.tres b/effect/status/PoisonEffectRes.tres
new file mode 100644
--- /dev/null	(date 1752261556352)
+++ b/effect/status/PoisonEffectRes.tres	(date 1752261556352)
@@ -0,0 +1,11 @@
+[gd_resource type="Resource" script_class="PoisonEffect" load_steps=2 format=3 uid="uid://xanqgonu2nje"]
+
+[ext_resource type="Script" uid="uid://cuf03a6q4u1c6" path="res://effect/status/PoisonEffect.gd" id="1_icfxe"]
+
+[resource]
+script = ExtResource("1_icfxe")
+damage_per_turn = 5
+duration_turns = 3
+name = "Poison"
+category = 4
+metadata/_custom_type_script = "uid://cuf03a6q4u1c6"
Index: effect/status/PoisonEffect.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/status/PoisonEffect.gd b/effect/status/PoisonEffect.gd
new file mode 100644
--- /dev/null	(date 1752237840046)
+++ b/effect/status/PoisonEffect.gd	(date 1752237840046)
@@ -0,0 +1,42 @@
+extends Effect
+class_name PoisonEffect
+
+@export var damage_per_turn: int = 5
+@export var duration_turns: int = 3
+
+var _remaining := 0
+var _source: CharacterInstance
+
+func on_apply(new_owner: CharacterInstance) -> void:
+	_remaining = duration_turns
+	self.owner = new_owner
+	print("[PoisonEffect] Applied to %s for %d turns, %d damage per turn." %
+		[owner.resource.name, duration_turns, damage_per_turn])
+
+func on_trigger(trigger: String, data) -> void:
+	if trigger == "on_post_hit":
+		_source = data.attacker
+		var duplicate_effect = self.duplicate()
+		duplicate_effect.owner = data.defender
+		duplicate_effect._source = _source
+		duplicate_effect._remaining = duration_turns
+		print("[PoisonEffect] Ticking on %s (%d damage), %d turns remaining." %
+			[duplicate_effect.owner.resource.name, damage_per_turn, duplicate_effect._remaining])
+		data.defender.apply_effect(duplicate_effect)
+
+	if trigger == "on_turn_end" and _remaining > 0:
+		if owner == null:
+			push_warning("PoisonEffect: Owner is null during on_turn_end tick.")
+			return
+
+		var tick = AttackAction.new()
+		tick.attacker = _source
+		tick.defender = owner
+		tick.type = DamageTypes.Type.POISON
+		tick.base_value = damage_per_turn
+		DamageResolver.apply_attack(tick)
+		
+		_remaining -= 1
+		if _remaining <= 0:
+			print("[PoisonEffect] Poison expired on %s." % owner.resource.name)
+			owner.remove_effect(self)
Index: effect/status/PoisonRes.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/status/PoisonRes.tres b/effect/status/PoisonRes.tres
new file mode 100644
--- /dev/null	(date 1752261556351)
+++ b/effect/status/PoisonRes.tres	(date 1752261556351)
@@ -0,0 +1,10 @@
+[gd_resource type="Resource" script_class="PoisonRes" load_steps=2 format=3 uid="uid://badgfln40mudj"]
+
+[ext_resource type="Script" uid="uid://e6kqxurcakcn" path="res://effect/status/PoisonRes.gd" id="1_wunrv"]
+
+[resource]
+script = ExtResource("1_wunrv")
+resistance = 0.2
+name = "Poison Resistance"
+category = 0
+metadata/_custom_type_script = "uid://e6kqxurcakcn"
Index: effect/status/PoisonRes.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/status/PoisonRes.gd.uid b/effect/status/PoisonRes.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/effect/status/PoisonRes.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://e6kqxurcakcn
Index: scripts/DamageTypes.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/DamageTypes.gd b/scripts/DamageTypes.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/DamageTypes.gd	(date 1752085951000)
@@ -0,0 +1,16 @@
+extends Object
+
+class_name DamageTypes
+
+enum Type {
+	PHYSICAL,
+	FIRE,
+	ICE,
+	LIGHTNING,
+	POISON,
+	HOLY,
+	DARK
+}
+
+static func to_str(value: int) -> String:
+	return Type.keys()[value]
Index: effect/status/PoisonEffect.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/status/PoisonEffect.gd.uid b/effect/status/PoisonEffect.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/effect/status/PoisonEffect.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://cuf03a6q4u1c6
Index: scripts/EffectTriggers.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EffectTriggers.gd b/scripts/EffectTriggers.gd
new file mode 100644
--- /dev/null	(date 1752262112169)
+++ b/scripts/EffectTriggers.gd	(date 1752262112169)
@@ -0,0 +1,3 @@
+extends Node
+
+const ON_TURN_END := "on_turn_end"
Index: scripts/EffectTriggers.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/EffectTriggers.gd.uid b/scripts/EffectTriggers.gd.uid
new file mode 100644
--- /dev/null	(date 1752262052751)
+++ b/scripts/EffectTriggers.gd.uid	(date 1752262052751)
@@ -0,0 +1,1 @@
+uid://cho5kk41antlc
Index: action/AttackAction.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/action/AttackAction.gd b/action/AttackAction.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/action/AttackAction.gd	(date 1752085951000)
@@ -0,0 +1,9 @@
+extends Resource
+class_name AttackAction
+
+var attacker: CharacterInstance
+var defender: CharacterInstance
+var type: DamageTypes.Type
+var base_value: int = 0
+var is_critical: bool = false
+var tags: Array[String] = []
Index: action/DamageContext.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/action/DamageContext.gd.uid b/action/DamageContext.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/action/DamageContext.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://ctsoccbk5aqen
Index: action/SkillAction.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/action/SkillAction.gd.uid b/action/SkillAction.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/action/SkillAction.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://dawhd857phn7r
Index: action/AttackAction.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/action/AttackAction.gd.uid b/action/AttackAction.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/action/AttackAction.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://22wus7vyjnbr
Index: effect/Effect.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/Effect.gd b/effect/Effect.gd
new file mode 100644
--- /dev/null	(date 1752260954706)
+++ b/effect/Effect.gd	(date 1752260954706)
@@ -0,0 +1,24 @@
+extends Resource
+class_name Effect
+
+enum EffectCategory {
+	PASSIVE,
+	BUFF,
+	DEBUFF,
+	SKILL,
+	STATUS,
+	OTHER
+}
+
+var owner: CharacterInstance = null
+@export var name: String = "Unnamed Effect"
+@export var category: EffectCategory = EffectCategory.OTHER
+
+func on_apply(owner: CharacterInstance) -> void:
+	self.owner = owner
+
+func on_expire(owner: CharacterInstance) -> void:
+	pass
+
+func on_trigger(trigger: String, data) -> void:
+	pass
Index: effect/status/PoisonRes.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/status/PoisonRes.gd b/effect/status/PoisonRes.gd
new file mode 100644
--- /dev/null	(date 1752237969636)
+++ b/effect/status/PoisonRes.gd	(date 1752237969636)
@@ -0,0 +1,12 @@
+extends Effect
+class_name PoisonRes
+
+@export var resistance: float = 0.2
+
+func on_trigger(trigger: String, data: DamageContext) -> void:
+	if trigger == "on_receive_damage":
+		if data.type == DamageTypes.Type.POISON:
+			data.final_value -= (data.final_value * resistance)
+			print("Reducing poison damage for %s to %f" % [data.defender.resource.name, data.final_value])
+		else:
+			print("Not poison, skipping")
Index: effect/Effect.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/effect/Effect.gd.uid b/effect/Effect.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/effect/Effect.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://bp0biy0knxw2o
Index: skills/Skill.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/skills/Skill.gd.uid b/skills/Skill.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/skills/Skill.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://dq4acpkde276p
Index: skills/precision_strike.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/skills/precision_strike.tres b/skills/precision_strike.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/skills/precision_strike.tres	(date 1752085951000)
@@ -0,0 +1,16 @@
+[gd_resource type="Resource" script_class="Skill" load_steps=4 format=3 uid="uid://cfunb7l71n1np"]
+
+[ext_resource type="Script" uid="uid://bp0biy0knxw2o" path="res://effect/Effect.gd" id="1_kolkh"]
+[ext_resource type="Script" uid="uid://dq4acpkde276p" path="res://skills/Skill.gd" id="1_sdnn6"]
+[ext_resource type="Resource" uid="uid://xanqgonu2nje" path="res://effect/status/PoisonEffectRes.tres" id="2_hr3vu"]
+
+[resource]
+script = ExtResource("1_sdnn6")
+name = "Precision Strike"
+description = "Ignore defense and deal 15 damage"
+mp_cost = 0
+sp_cost = 5
+damage = 15
+effects = Array[ExtResource("1_kolkh")]([ExtResource("2_hr3vu")])
+damage_type = 2
+metadata/_custom_type_script = "uid://dq4acpkde276p"
Index: skills/Skill.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/skills/Skill.gd b/skills/Skill.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/skills/Skill.gd	(date 1752085951000)
@@ -0,0 +1,16 @@
+extends Resource
+
+class_name Skill
+@export var name: String
+@export var description: String
+#@export var icon: Texture2D
+@export var mp_cost: int = 0
+@export var sp_cost: int = 0
+@export var damage: int = 0
+@export var effects: Array[Effect] = []
+@export var damage_type: DamageTypes.Type
+
+#func execute(user: CharacterInstance, targets: Array):
+	#var runner = effect_scene.instantiate()
+	#runner.setup(user, targets)
+	#runner.run()
Index: action/DamageContext.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/action/DamageContext.gd b/action/DamageContext.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/action/DamageContext.gd	(date 1752085951000)
@@ -0,0 +1,11 @@
+extends Resource
+class_name DamageContext
+
+var attacker: CharacterInstance
+var defender: CharacterInstance
+
+var type: DamageTypes.Type
+var base_value: int
+var is_critical: bool = false
+var final_value: float
+var tags: Array[Effect] = []
Index: action/SkillAction.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/action/SkillAction.gd b/action/SkillAction.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/action/SkillAction.gd	(date 1752085951000)
@@ -0,0 +1,10 @@
+extends Resource
+class_name SkillAction
+
+var attacker: CharacterInstance
+var defender: CharacterInstance
+var skill: Skill
+var type: DamageTypes.Type
+var base_value: int = 0
+
+var effects: Array[Effect] = []
Index: scripts/DamageResolver.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/DamageResolver.gd.uid b/scripts/DamageResolver.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/DamageResolver.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://d3kf00dxigxq4
Index: scripts/DamageTypes.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/DamageTypes.gd.uid b/scripts/DamageTypes.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scripts/DamageTypes.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://br5unlcudqtol
Index: scripts/DamageResolver.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scripts/DamageResolver.gd b/scripts/DamageResolver.gd
new file mode 100644
--- /dev/null	(date 1752260862833)
+++ b/scripts/DamageResolver.gd	(date 1752260862833)
@@ -0,0 +1,62 @@
+extends Node
+class_name DamageManager
+
+signal damage_resolved(ctx: DamageContext)
+
+func apply_attack(action: AttackAction) -> DamageContext:
+	return _apply_core(
+		action.attacker,
+		action.defender,
+		action.type,
+		action.base_value,
+		[]
+	)
+
+func apply_skill(action: SkillAction) -> DamageContext:
+	return _apply_core(
+		action.attacker,
+		action.defender,
+		action.type,
+		action.base_value,
+		action.effects
+	)
+
+func _apply_core(attacker: CharacterInstance, defender: CharacterInstance, damage_type: DamageTypes.Type, base: int, extra_effects: Array[Effect]) -> DamageContext:
+	var ctx = DamageContext.new()
+	ctx.attacker    = attacker
+	ctx.defender    = defender
+	ctx.type        = damage_type
+	ctx.base_value  = base
+	ctx.is_critical = false
+	ctx.final_value = base
+	ctx.tags        = extra_effects
+
+	var damage_type_str = DamageTypes.to_str(ctx.type)
+	#print("Initial %s damage: %d" % [DamageTypes.to_str(ctx.type), ctx.final_value])
+	
+	# 1) Attacker’s passives & buffs
+	attacker.process_effects("on_pre_hit", ctx)
+	#print("After attacker effects: %d" % ctx.final_value)
+	
+	# 2) Skill‑specific effects (e.g. defense ignore)
+	for e in extra_effects:
+		if e.has_method("on_trigger"):
+			e.on_trigger("on_calculate_" + damage_type_str, ctx)
+	#print("After attacker skill: %d" % ctx.final_value)
+	
+	# 3) Defender’s passives & defenses
+	defender.process_effects("on_receive_damage", ctx)
+
+	# 4) Clamp & apply
+	ctx.final_value = max(ctx.final_value, 0)
+
+	defender.set_current_health(defender.current_health - ctx.final_value)
+	print("%s dealt %f damage (%s) to %s" % [ctx.attacker.resource.name, ctx.final_value, DamageTypes.to_str(ctx.type), ctx.defender.resource.name])
+	emit_signal("damage_resolved", ctx)
+
+	# 5) Post‑hit skill effects (e.g. poison)
+	for e in extra_effects:
+		if e.has_method("on_trigger"):
+			e.on_trigger("on_post_hit", ctx)
+
+	return ctx
Index: ghost.png.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ghost.png.import b/ghost.png.import
new file mode 100644
--- /dev/null	(date 1752237144994)
+++ b/ghost.png.import	(date 1752237144994)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://dc2rf27qhxx4g"
+path.s3tc="res://.godot/imported/ghost.png-f343bb4bd35f12f8f631dffe3b7d2891.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://ghost.png"
+dest_files=["res://.godot/imported/ghost.png-f343bb4bd35f12f8f631dffe3b7d2891.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=0
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=0
+roughness/src_normal=""
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: 1744622629065540.png.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/1744622629065540.png.import b/1744622629065540.png.import
new file mode 100644
--- /dev/null	(date 1752237144994)
+++ b/1744622629065540.png.import	(date 1752237144994)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://jthnsva7c8xt"
+path.s3tc="res://.godot/imported/1744622629065540.png-3e82e9019c3697c7e7ac634cca0b41b0.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://1744622629065540.png"
+dest_files=["res://.godot/imported/1744622629065540.png-3e82e9019c3697c7e7ac634cca0b41b0.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=1
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=1
+roughness/src_normal="res://1744622629065540.png"
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: .gitattributes
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitattributes b/.gitattributes
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/.gitattributes	(date 1752085951000)
@@ -0,0 +1,2 @@
+# Normalize EOL for all files that Git considers text files.
+* text=auto eol=lf
Index: maps/_arena/default/arena_default_00.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/maps/_arena/default/arena_default_00.tscn b/maps/_arena/default/arena_default_00.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/maps/_arena/default/arena_default_00.tscn	(date 1752085951000)
@@ -0,0 +1,85 @@
+[gd_scene load_steps=14 format=3 uid="uid://dq6gw6kdq30h2"]
+
+[ext_resource type="Script" uid="uid://djga0vllljxhw" path="res://scripts/BattleManager.gd" id="1_6ixpi"]
+[ext_resource type="Texture2D" uid="uid://bxf0rxqbalfqo" path="res://GettyImages-2166462891_WEB.webp" id="2_gu5d0"]
+[ext_resource type="PackedScene" uid="uid://calltc1gumdi2" path="res://scenes/UIBattle.tscn" id="3_w35a6"]
+[ext_resource type="Script" uid="uid://w5crfr45qebk" path="res://scripts/EnemyGrid.gd" id="4_wh25n"]
+
+[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_7m2sr"]
+panorama = ExtResource("2_gu5d0")
+
+[sub_resource type="Sky" id="Sky_dess1"]
+sky_material = SubResource("PanoramaSkyMaterial_7m2sr")
+
+[sub_resource type="Environment" id="Environment_clnqo"]
+background_mode = 2
+sky = SubResource("Sky_dess1")
+ambient_light_source = 3
+ambient_light_color = Color(1, 1, 1, 1)
+ambient_light_sky_contribution = 0.98
+
+[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_50weh"]
+load_path = "res://.godot/imported/floor_stone.jpg-174f83846018e36f29e70ca2946a733a.s3tc.ctex"
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_n2dfx"]
+albedo_color = Color(0.843184, 0.843184, 0.843184, 1)
+metallic_specular = 0.05
+normal_scale = 15.15
+normal_texture = SubResource("CompressedTexture2D_50weh")
+ao_texture_channel = 3
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_8n0un"]
+albedo_color = Color(0.882353, 0, 0, 1)
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_f0kb1"]
+albedo_color = Color(0, 0, 0, 1)
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_7m2sr"]
+albedo_color = Color(0, 0, 0, 1)
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_dess1"]
+albedo_color = Color(0, 0, 0, 1)
+
+[node name="ArenaDefault" type="Node3D"]
+script = ExtResource("1_6ixpi")
+
+[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
+environment = SubResource("Environment_clnqo")
+
+[node name="CSGBox3D" type="CSGBox3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 0.1, 0, 0, 0, 2, 0, 0, -5)
+size = Vector3(16, 0.1, 11)
+material = SubResource("StandardMaterial3D_n2dfx")
+
+[node name="CSGBox3D4" type="CSGBox3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 0.1, 0, 0, 0, 2, 0, 6, -5)
+visible = false
+size = Vector3(16, 0.1, 11)
+material = SubResource("StandardMaterial3D_n2dfx")
+
+[node name="CSGBox3D2" type="CSGBox3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 1.6, 0, 3, 6)
+size = Vector3(16, 3, 0.1)
+material = SubResource("StandardMaterial3D_8n0un")
+
+[node name="CSGBox3D3" type="CSGBox3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 1.6, 0, 3, -16)
+size = Vector3(16, 3, 0.1)
+material = SubResource("StandardMaterial3D_f0kb1")
+
+[node name="CSGBox3D5" type="CSGBox3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 2, -16, 3, -5)
+size = Vector3(0.01, 3, 11)
+material = SubResource("StandardMaterial3D_7m2sr")
+
+[node name="CSGBox3D6" type="CSGBox3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 2, 0, 0, 0, 2, 16, 3, -5)
+size = Vector3(0.01, 3, 11)
+material = SubResource("StandardMaterial3D_dess1")
+
+[node name="EnemyFormation" type="Node3D" parent="."]
+script = ExtResource("4_wh25n")
+
+[node name="BattleUI" parent="." instance=ExtResource("3_w35a6")]
+anchor_top = 0.716
+offset_top = 0.0319824
Index: scenes/enemy_grid.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/enemy_grid.tscn b/scenes/enemy_grid.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/enemy_grid.tscn	(date 1752085951000)
@@ -0,0 +1,34 @@
+[gd_scene load_steps=2 format=3 uid="uid://jt5wmc5ciuxy"]
+
+[ext_resource type="Script" uid="uid://w5crfr45qebk" path="res://scripts/EnemyGrid.gd" id="1_lg1mi"]
+
+[node name="EnemyGrid" type="Control"]
+layout_mode = 3
+anchor_left = 0.35
+anchor_top = 0.156
+anchor_right = 0.655
+anchor_bottom = 0.478
+offset_left = 48.8
+offset_top = -4.08801
+offset_right = -302.56
+offset_bottom = -212.744
+script = ExtResource("1_lg1mi")
+
+[node name="BackRow" type="HBoxContainer" parent="."]
+layout_mode = 2
+offset_top = 100.0
+offset_right = 224.0
+offset_bottom = 180.0
+size_flags_vertical = 3
+theme_override_constants/separation = 8
+alignment = 1
+
+[node name="FrontRow" type="HBoxContainer" parent="."]
+layout_mode = 2
+offset_left = -61.0
+offset_top = 133.0
+offset_right = 431.0
+offset_bottom = 214.0
+size_flags_vertical = 3
+theme_override_constants/separation = 8
+alignment = 1
Index: maps/_editor/BeginningArea.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/maps/_editor/BeginningArea.tscn b/maps/_editor/BeginningArea.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/maps/_editor/BeginningArea.tscn	(date 1752085951000)
@@ -0,0 +1,73 @@
+[gd_scene load_steps=10 format=4 uid="uid://b3nsf243cw4v1"]
+
+[ext_resource type="Texture2D" uid="uid://jthnsva7c8xt" path="res://1744622629065540.png" id="1_npm7y"]
+[ext_resource type="Texture2D" uid="uid://dc2rf27qhxx4g" path="res://ghost.png" id="2_5738j"]
+[ext_resource type="Script" uid="uid://c4ahdxkhm0pq5" path="res://scripts/ConvertTileMapLayer.gd" id="2_o4ove"]
+[ext_resource type="Texture2D" uid="uid://da5rfgx1dlrog" path="res://night sky.jpg" id="3_rywq5"]
+
+[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_o4ove"]
+texture = ExtResource("1_npm7y")
+texture_region_size = Vector2i(20, 20)
+0:1/size_in_atlas = Vector2i(3, 3)
+0:1/0 = 0
+0:1/0/custom_data_0 = "default"
+0:1/0/custom_data_1 = "floor"
+6:0/size_in_atlas = Vector2i(3, 3)
+6:0/0 = 0
+6:0/0/custom_data_0 = "default"
+6:0/0/custom_data_1 = "wall"
+
+[sub_resource type="TileSet" id="TileSet_53a4w"]
+tile_size = Vector2i(200, 200)
+custom_data_layer_0/name = "style"
+custom_data_layer_0/type = 4
+custom_data_layer_1/name = "type"
+custom_data_layer_1/type = 4
+sources/0 = SubResource("TileSetAtlasSource_o4ove")
+
+[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_50jpw"]
+texture = ExtResource("2_5738j")
+0:0/size_in_atlas = Vector2i(5, 5)
+0:0/0 = 0
+0:0/0/custom_data_0 = "skeleton"
+0:0/0/custom_data_1 = "test"
+0:0/0/custom_data_2 = "arena_default_00"
+
+[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_rogu2"]
+texture = ExtResource("3_rywq5")
+texture_region_size = Vector2i(200, 200)
+0:0/0 = 0
+0:0/0/custom_data_3 = "crypt_00"
+
+[sub_resource type="TileSet" id="TileSet_cnf7p"]
+tile_size = Vector2i(200, 200)
+custom_data_layer_0/name = "encounter"
+custom_data_layer_0/type = 4
+custom_data_layer_1/name = "event"
+custom_data_layer_1/type = 4
+custom_data_layer_2/name = "arena"
+custom_data_layer_2/type = 4
+custom_data_layer_3/name = "transition"
+custom_data_layer_3/type = 4
+sources/0 = SubResource("TileSetAtlasSource_50jpw")
+sources/1 = SubResource("TileSetAtlasSource_rogu2")
+
+[node name="StartingArea" type="Node2D"]
+
+[node name="MapLayer" type="TileMapLayer" parent="."]
+tile_map_data = PackedByteArray("AAAAAAAAAAAGAAAAAAABAAAAAAAGAAAAAAACAAAAAAAGAAAAAAABAAEAAAAAAAEAAAACAAEAAAAAAAEAAAADAAEAAAAGAAAAAAAEAAIAAAAGAAAAAAAFAAMAAAAGAAAAAAD//wEAAAAGAAAAAAD+/wIAAAAGAAAAAAD9/wMAAAAGAAAAAAD8/wQAAAAGAAAAAAD7/wUAAAAGAAAAAAAGAAQAAAAGAAAAAAAHAAUAAAAGAAAAAAAIAAYAAAAGAAAAAAD6/wYAAAAGAAAAAAAIAAcAAAAGAAAAAAAIAAgAAAAGAAAAAAAIAAkAAAAGAAAAAAAIAAoAAAAGAAAAAAAIAAsAAAAGAAAAAAAIAAwAAAAGAAAAAAAIAA0AAAAGAAAAAAAIAA4AAAAGAAAAAAAIAA8AAAAGAAAAAAD6/wcAAAAGAAAAAAD6/wgAAAAGAAAAAAD6/wkAAAAGAAAAAAD6/woAAAAGAAAAAAD6/wsAAAAGAAAAAAD6/wwAAAAGAAAAAAD6/w0AAAAGAAAAAAD6/w4AAAAGAAAAAAD6/w8AAAAGAAAAAAD6/xAAAAAGAAAAAAD6/xEAAAAGAAAAAAD6/xIAAAAGAAAAAAD6/xMAAAAGAAAAAAD6/xQAAAAGAAAAAAD6/xUAAAAGAAAAAAAIABAAAAAGAAAAAAAIABEAAAAGAAAAAAAIABIAAAAGAAAAAAAIABMAAAAGAAAAAAAIABQAAAAGAAAAAAAIABUAAAAGAAAAAAD6/xYAAAAGAAAAAAD7/xYAAAAGAAAAAAD8/xYAAAAGAAAAAAD9/xYAAAAGAAAAAAD+/xYAAAAGAAAAAAD//xYAAAAGAAAAAAAAABYAAAAGAAAAAAABABYAAAAGAAAAAAACABYAAAAGAAAAAAADABYAAAAGAAAAAAAEABYAAAAGAAAAAAAFABYAAAAGAAAAAAAGABYAAAAGAAAAAAAHABYAAAAGAAAAAAAIABYAAAAGAAAAAAABABEAAAAAAAEAAAABABAAAAAAAAEAAAABAA8AAAAAAAEAAAABAA4AAAAAAAEAAAABAA0AAAAAAAEAAAABAAwAAAAAAAEAAAABAAsAAAAAAAEAAAABAAoAAAAAAAEAAAABAAkAAAAAAAEAAAABAAgAAAAAAAEAAAABAAcAAAAAAAEAAAABAAYAAAAAAAEAAAABAAUAAAAAAAEAAAABAAQAAAAAAAEAAAABAAMAAAAAAAEAAAABAAIAAAAAAAEAAAAAAAIAAAAAAAEAAAAAAAEAAAAAAAEAAAD//wIAAAAAAAEAAAD//wMAAAAAAAEAAAD+/wMAAAAAAAEAAAD+/wQAAAAAAAEAAAD9/wQAAAAAAAEAAAD9/wUAAAAAAAEAAAD8/wUAAAAAAAEAAAD8/wYAAAAAAAEAAAD7/wYAAAAAAAEAAAD7/wcAAAAAAAEAAAD7/wgAAAAAAAEAAAD7/wkAAAAAAAEAAAD7/woAAAAAAAEAAAD7/wsAAAAAAAEAAAD7/wwAAAAAAAEAAAD7/w0AAAAAAAEAAAD7/w4AAAAAAAEAAAD7/w8AAAAAAAEAAAD7/xAAAAAAAAEAAAD7/xEAAAAAAAEAAAD7/xIAAAAAAAEAAAD7/xMAAAAAAAEAAAD7/xQAAAAAAAEAAAD7/xUAAAAAAAEAAAD8/xUAAAAAAAEAAAD8/xQAAAAAAAEAAAD8/xMAAAAAAAEAAAD8/xIAAAAAAAEAAAD8/xEAAAAAAAEAAAD8/xAAAAAAAAEAAAD8/w8AAAAGAAAAAAD8/w4AAAAAAAEAAAD8/w0AAAAGAAAAAAD8/wwAAAAAAAEAAAD8/wsAAAAGAAAAAAD8/woAAAAAAAEAAAD8/wkAAAAGAAAAAAD8/wgAAAAAAAEAAAD8/wcAAAAGAAAAAAD9/wcAAAAAAAEAAAD9/wYAAAAAAAEAAAD+/wYAAAAAAAEAAAD+/wUAAAAGAAAAAAD//wUAAAAAAAEAAAD//wQAAAAAAAEAAAAAAAQAAAAAAAEAAAAAAAMAAAAGAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAAAAAEAAAD//wYAAAAAAAEAAAD//wcAAAAAAAEAAAD+/wcAAAAGAAAAAAD+/wgAAAAAAAEAAAD9/wgAAAAAAAEAAAD9/wkAAAAAAAEAAAD9/woAAAAAAAEAAAD9/wsAAAAAAAEAAAD9/wwAAAAAAAEAAAD9/w0AAAAAAAEAAAD9/w4AAAAAAAEAAAD9/w8AAAAAAAEAAAD9/xAAAAAAAAEAAAD9/xEAAAAAAAEAAAD9/xIAAAAAAAEAAAD9/xMAAAAAAAEAAAD9/xQAAAAAAAEAAAD9/xUAAAAAAAEAAAD+/xUAAAAAAAEAAAD+/xQAAAAAAAEAAAD+/xMAAAAAAAEAAAD+/xIAAAAAAAEAAAD+/xEAAAAAAAEAAAD+/xAAAAAAAAEAAAD+/w8AAAAGAAAAAAD+/w4AAAAAAAEAAAD+/w0AAAAGAAAAAAD+/wwAAAAAAAEAAAD+/wsAAAAGAAAAAAD+/woAAAAAAAEAAAD+/wkAAAAGAAAAAAD//wkAAAAAAAEAAAD//wgAAAAAAAEAAAAAAAgAAAAAAAEAAAAAAAcAAAAGAAAAAAAAAAkAAAAGAAAAAAAAAAoAAAAAAAEAAAD//woAAAAAAAEAAAD//wsAAAAAAAEAAAD//wwAAAAAAAEAAAD//w0AAAAAAAEAAAD//w4AAAAAAAEAAAD//w8AAAAAAAEAAAD//xAAAAAAAAEAAAD//xEAAAAAAAEAAAD//xIAAAAAAAEAAAD//xMAAAAAAAEAAAD//xQAAAAAAAEAAAD//xUAAAAAAAEAAAAAABUAAAAAAAEAAAAAABQAAAAAAAEAAAAAABMAAAAAAAEAAAAAABIAAAAAAAEAAAAAABEAAAAAAAEAAAAAABAAAAAAAAEAAAAAAA8AAAAGAAAAAAAAAA4AAAAAAAEAAAAAAA0AAAAGAAAAAAAAAAwAAAAAAAEAAAAAAAsAAAAGAAAAAAABABIAAAAAAAEAAAABABMAAAAAAAEAAAABABQAAAAAAAEAAAABABUAAAAAAAEAAAACABUAAAAAAAEAAAACABQAAAAAAAEAAAACABMAAAAAAAEAAAACABIAAAAAAAEAAAACABEAAAAAAAEAAAACABAAAAAAAAEAAAACAA8AAAAGAAAAAAACAA4AAAAAAAEAAAACAA0AAAAGAAAAAAACAAwAAAAAAAEAAAACAAsAAAAGAAAAAAACAAoAAAAAAAEAAAACAAkAAAAGAAAAAAACAAgAAAAAAAEAAAACAAcAAAAGAAAAAAACAAYAAAAAAAEAAAACAAUAAAAGAAAAAAACAAQAAAAAAAEAAAACAAMAAAAGAAAAAAACAAIAAAAAAAEAAAADAAIAAAAAAAEAAAADAAMAAAAAAAEAAAADAAQAAAAAAAEAAAADAAUAAAAAAAEAAAADAAYAAAAAAAEAAAADAAcAAAAAAAEAAAADAAgAAAAAAAEAAAADAAkAAAAAAAEAAAADAAoAAAAAAAEAAAADAAsAAAAAAAEAAAADAAwAAAAAAAEAAAADAA0AAAAAAAEAAAADAA4AAAAAAAEAAAADAA8AAAAAAAEAAAADABAAAAAAAAEAAAADABEAAAAAAAEAAAADABIAAAAAAAEAAAADABMAAAAAAAEAAAADABQAAAAAAAEAAAADABUAAAAAAAEAAAAEABUAAAAAAAEAAAAEABQAAAAAAAEAAAAEABMAAAAAAAEAAAAEABIAAAAAAAEAAAAEABEAAAAAAAEAAAAEABAAAAAAAAEAAAAEAA8AAAAGAAAAAAAEAA4AAAAAAAEAAAAEAA0AAAAGAAAAAAAEAAwAAAAAAAEAAAAEAAsAAAAGAAAAAAAEAAoAAAAAAAEAAAAEAAkAAAAGAAAAAAAEAAgAAAAAAAEAAAAEAAcAAAAGAAAAAAAEAAYAAAAAAAEAAAAEAAUAAAAGAAAAAAAEAAQAAAAAAAEAAAAEAAMAAAAAAAEAAAAFAAQAAAAAAAEAAAAFAAUAAAAAAAEAAAAFAAYAAAAAAAEAAAAFAAcAAAAAAAEAAAAFAAgAAAAAAAEAAAAFAAkAAAAAAAEAAAAFAAoAAAAAAAEAAAAFAAsAAAAAAAEAAAAFAAwAAAAAAAEAAAAFAA0AAAAAAAEAAAAFAA4AAAAAAAEAAAAFAA8AAAAAAAEAAAAFABAAAAAAAAEAAAAFABEAAAAAAAEAAAAFABIAAAAAAAEAAAAFABMAAAAAAAEAAAAFABQAAAAAAAEAAAAFABUAAAAAAAEAAAAGABUAAAAAAAEAAAAGABQAAAAAAAEAAAAGABMAAAAAAAEAAAAGABIAAAAAAAEAAAAGABEAAAAAAAEAAAAGABAAAAAAAAEAAAAGAA8AAAAGAAAAAAAGAA4AAAAAAAEAAAAGAA0AAAAGAAAAAAAGAAwAAAAAAAEAAAAGAAsAAAAGAAAAAAAGAAoAAAAAAAEAAAAGAAkAAAAGAAAAAAAGAAgAAAAAAAEAAAAGAAcAAAAGAAAAAAAGAAYAAAAAAAEAAAAGAAUAAAAAAAEAAAAHAAYAAAAAAAEAAAAHAAcAAAAAAAEAAAAHAAgAAAAAAAEAAAAHAAkAAAAAAAEAAAAHAAoAAAAAAAEAAAAHAAsAAAAAAAEAAAAHAAwAAAAAAAEAAAAHAA0AAAAAAAEAAAAHAA4AAAAAAAEAAAAHAA8AAAAAAAEAAAAHABAAAAAAAAEAAAAHABEAAAAAAAEAAAAHABIAAAAAAAEAAAAHABMAAAAAAAEAAAAHABQAAAAAAAEAAAAHABUAAAAAAAEAAAA=")
+tile_set = SubResource("TileSet_53a4w")
+
+[node name="EventLayer" type="TileMapLayer" parent="."]
+tile_map_data = PackedByteArray("AAACAAEAAAAAAAAAAAD6/wAAAAAAAAAAAAADAAIAAQAAAAAAAAA=")
+tile_set = SubResource("TileSet_cnf7p")
+
+[node name="Converter" type="Node" parent="." node_paths=PackedStringArray("map_layer", "event_layer")]
+script = ExtResource("2_o4ove")
+map_id = "area_00"
+map_name = "Beginning Area"
+map_layer = NodePath("../MapLayer")
+event_layer = NodePath("../EventLayer")
+output_resource_path = "res://maps/hub/starting_area.tres"
+map_theme = "default"
+start_pos = Vector2i(6, 1)
Index: maps/_editor/Crypt_00.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/maps/_editor/Crypt_00.tscn b/maps/_editor/Crypt_00.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/maps/_editor/Crypt_00.tscn	(date 1752085951000)
@@ -0,0 +1,60 @@
+[gd_scene load_steps=8 format=4 uid="uid://c5s2pfoho6rd4"]
+
+[ext_resource type="Texture2D" uid="uid://bxf0rxqbalfqo" path="res://GettyImages-2166462891_WEB.webp" id="1_upmfc"]
+[ext_resource type="Texture2D" uid="uid://jthnsva7c8xt" path="res://1744622629065540.png" id="2_pyevf"]
+[ext_resource type="Script" uid="uid://c4ahdxkhm0pq5" path="res://scripts/ConvertTileMapLayer.gd" id="3_pyevf"]
+
+[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_pyevf"]
+texture = ExtResource("1_upmfc")
+texture_region_size = Vector2i(200, 200)
+2:0/0 = 0
+2:0/0/custom_data_0 = "stone_wall"
+2:0/0/custom_data_1 = "wall"
+11:5/0 = 0
+11:5/0/custom_data_0 = "stone_floor"
+11:5/0/custom_data_1 = "floor"
+
+[sub_resource type="TileSet" id="TileSet_upmfc"]
+tile_size = Vector2i(200, 200)
+custom_data_layer_0/name = "style"
+custom_data_layer_0/type = 4
+custom_data_layer_1/name = "type"
+custom_data_layer_1/type = 4
+sources/0 = SubResource("TileSetAtlasSource_pyevf")
+
+[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_vcndn"]
+texture = ExtResource("2_pyevf")
+texture_region_size = Vector2i(200, 200)
+0:0/0 = 0
+0:0/0/custom_data_0 = "goblin"
+0:0/0/custom_data_2 = "arena_default_00"
+
+[sub_resource type="TileSet" id="TileSet_fp8u1"]
+tile_size = Vector2i(200, 200)
+custom_data_layer_0/name = "encounter"
+custom_data_layer_0/type = 4
+custom_data_layer_1/name = "event"
+custom_data_layer_1/type = 4
+custom_data_layer_2/name = "arena"
+custom_data_layer_2/type = 4
+sources/1 = SubResource("TileSetAtlasSource_vcndn")
+
+[node name="Crypt00" type="Node2D"]
+
+[node name="MapLayer" type="TileMapLayer" parent="."]
+tile_map_data = PackedByteArray("AAAAAAAAAAACAAAAAAAAAAEAAAACAAAAAAAAAAIAAAACAAAAAAAAAAMAAAACAAAAAAAAAAQAAAACAAAAAAAAAAUAAAACAAAAAAAAAAYAAAACAAAAAAAAAAcAAAACAAAAAAAAAAgAAAACAAAAAAAAAAkAAAACAAAAAAABAAAAAAACAAAAAAACAAAAAAACAAAAAAADAAAAAAACAAAAAAAEAAAAAAACAAAAAAAFAAAAAAACAAAAAAAGAAAAAAACAAAAAAAHAAAAAAACAAAAAAAIAAAAAAACAAAAAAAIAAEAAAACAAAAAAAIAAIAAAACAAAAAAAIAAMAAAACAAAAAAAIAAQAAAACAAAAAAAIAAUAAAACAAAAAAAIAAYAAAACAAAAAAAIAAcAAAACAAAAAAAIAAgAAAACAAAAAAAIAAkAAAACAAAAAAABAAEAAAACAAAAAAAHAAEAAAACAAAAAAABAAoAAAACAAAAAAACAAsAAAACAAAAAAAHAAoAAAACAAAAAAAGAAsAAAACAAAAAAACAAwAAAACAAAAAAACAA0AAAACAAAAAAAGAAwAAAACAAAAAAAGAA0AAAACAAAAAAAEABEAAAACAAAAAAADABEAAAACAAAAAAACABEAAAACAAAAAAAFABEAAAACAAAAAAAGABEAAAACAAAAAAAHABEAAAACAAAAAAAIABEAAAACAAAAAAAJABEAAAACAAAAAAAHAA0AAAACAAAAAAAIAA0AAAACAAAAAAAJAA0AAAACAAAAAAAKAA0AAAACAAAAAAALAA0AAAACAAAAAAAMAA0AAAACAAAAAAANAA0AAAACAAAAAAAOAA0AAAACAAAAAAAPAA0AAAACAAAAAAAKABEAAAACAAAAAAALABEAAAACAAAAAAAMABEAAAACAAAAAAANABEAAAACAAAAAAAOABEAAAACAAAAAAAPABEAAAACAAAAAAAQABEAAAACAAAAAAARABEAAAACAAAAAAASABEAAAACAAAAAAATABEAAAACAAAAAAAUABEAAAACAAAAAAAUABAAAAACAAAAAAAUAA8AAAACAAAAAAAUAA4AAAACAAAAAAAUAA0AAAACAAAAAAAUAAwAAAACAAAAAAAUAAsAAAACAAAAAAAQAA0AAAACAAAAAAARAA0AAAACAAAAAAASAA0AAAACAAAAAAASAAwAAAACAAAAAAASAAsAAAACAAAAAAASAAoAAAACAAAAAAASAAkAAAACAAAAAAASAAgAAAACAAAAAAASAAcAAAACAAAAAAASAAYAAAACAAAAAAAUAAoAAAACAAAAAAAUAAkAAAACAAAAAAAUAAgAAAACAAAAAAAUAAcAAAACAAAAAAAUAAYAAAACAAAAAAABAA0AAAACAAAAAAAAAA0AAAACAAAAAAD//w0AAAACAAAAAAD+/w0AAAACAAAAAAD9/w0AAAACAAAAAAD8/w0AAAACAAAAAAD7/w0AAAACAAAAAAD6/w0AAAACAAAAAAD5/w0AAAACAAAAAAD4/w0AAAACAAAAAAD3/w0AAAACAAAAAAD2/w0AAAACAAAAAAD2/w4AAAACAAAAAAD2/w8AAAACAAAAAAD2/xAAAAACAAAAAAD2/xEAAAACAAAAAAD2/xIAAAACAAAAAAD2/xMAAAACAAAAAAABABEAAAACAAAAAAAAABEAAAACAAAAAAD//xEAAAACAAAAAAD+/xEAAAACAAAAAAD9/xEAAAACAAAAAAD8/xEAAAACAAAAAAD7/xEAAAACAAAAAAD6/xEAAAACAAAAAAD5/xEAAAACAAAAAAD4/xEAAAACAAAAAAD4/xIAAAACAAAAAAD4/xMAAAACAAAAAAD4/xQAAAACAAAAAAD4/xUAAAACAAAAAAD4/xYAAAACAAAAAAD4/xcAAAACAAAAAAD4/xgAAAACAAAAAAD2/xQAAAACAAAAAAD2/xUAAAACAAAAAAD2/xYAAAACAAAAAAD2/xcAAAACAAAAAAD2/xgAAAACAAAAAAD2/xkAAAACAAAAAAD3/xkAAAACAAAAAAD4/xkAAAACAAAAAAAUAAUAAAACAAAAAAATAAUAAAACAAAAAAASAAUAAAACAAAAAAACAAEAAAALAAUAAAACAAIAAAALAAUAAAADAAYAAAALAAUAAAADAAUAAAALAAUAAAADAAQAAAALAAUAAAADAAMAAAALAAUAAAADAAIAAAALAAUAAAADAAEAAAALAAUAAAAEAAEAAAALAAUAAAAEAAIAAAALAAUAAAAEAAMAAAALAAUAAAAEAAQAAAALAAUAAAAEAAUAAAALAAUAAAAEAAYAAAALAAUAAAAEAAcAAAALAAUAAAADAAcAAAALAAUAAAACAAcAAAALAAUAAAACAAYAAAALAAUAAAACAAUAAAALAAUAAAACAAQAAAALAAUAAAACAAMAAAALAAUAAAABAAMAAAALAAUAAAABAAIAAAALAAUAAAABAAQAAAALAAUAAAABAAUAAAALAAUAAAABAAYAAAALAAUAAAABAAcAAAALAAUAAAABAAgAAAALAAUAAAABAAkAAAALAAUAAAACAAkAAAALAAUAAAACAAgAAAALAAUAAAADAAgAAAALAAUAAAADAAkAAAALAAUAAAADAAoAAAALAAUAAAACAAoAAAALAAUAAAADAAsAAAALAAUAAAADAAwAAAALAAUAAAADAA0AAAALAAUAAAADAA4AAAALAAUAAAACAA4AAAALAAUAAAABAA4AAAALAAUAAAAAAA4AAAALAAUAAAD//w4AAAALAAUAAAD+/w4AAAALAAUAAAD9/w4AAAALAAUAAAD8/w4AAAALAAUAAAD7/w4AAAALAAUAAAD6/w4AAAALAAUAAAD5/w4AAAALAAUAAAD4/w4AAAALAAUAAAD3/w4AAAALAAUAAAD3/w8AAAALAAUAAAD3/xAAAAALAAUAAAD3/xEAAAALAAUAAAD3/xIAAAALAAUAAAD3/xMAAAALAAUAAAD3/xQAAAALAAUAAAD3/xUAAAALAAUAAAD3/xYAAAALAAUAAAD3/xcAAAALAAUAAAD3/xgAAAALAAUAAAD4/xAAAAALAAUAAAD4/w8AAAALAAUAAAD5/w8AAAALAAUAAAD5/xAAAAALAAUAAAD6/xAAAAALAAUAAAD6/w8AAAALAAUAAAD7/w8AAAALAAUAAAD7/xAAAAALAAUAAAD8/xAAAAALAAUAAAD8/w8AAAALAAUAAAD9/w8AAAALAAUAAAD9/xAAAAALAAUAAAD+/xAAAAALAAUAAAD+/w8AAAALAAUAAAD//w8AAAALAAUAAAD//xAAAAALAAUAAAAAABAAAAALAAUAAAAAAA8AAAALAAUAAAABAA8AAAALAAUAAAABABAAAAALAAUAAAACABAAAAALAAUAAAACAA8AAAALAAUAAAADAA8AAAALAAUAAAADABAAAAALAAUAAAAEABAAAAALAAUAAAAEAA8AAAALAAUAAAAEAA4AAAALAAUAAAAEAA0AAAALAAUAAAAEAAwAAAALAAUAAAAEAAsAAAALAAUAAAAEAAoAAAALAAUAAAAEAAkAAAALAAUAAAAEAAgAAAALAAUAAAAFAAgAAAALAAUAAAAFAAcAAAALAAUAAAAFAAYAAAALAAUAAAAFAAUAAAALAAUAAAAFAAQAAAALAAUAAAAFAAMAAAALAAUAAAAFAAIAAAALAAUAAAAFAAEAAAALAAUAAAAGAAEAAAALAAUAAAAGAAIAAAALAAUAAAAGAAMAAAALAAUAAAAGAAQAAAALAAUAAAAGAAUAAAALAAUAAAAGAAYAAAALAAUAAAAGAAcAAAALAAUAAAAGAAgAAAALAAUAAAAGAAkAAAALAAUAAAAFAAkAAAALAAUAAAAFAAoAAAALAAUAAAAFAAsAAAALAAUAAAAFAAwAAAALAAUAAAAFAA0AAAALAAUAAAAFAA4AAAALAAUAAAAFAA8AAAALAAUAAAAFABAAAAALAAUAAAAGABAAAAALAAUAAAAGAA8AAAALAAUAAAAGAA4AAAALAAUAAAAHAA4AAAALAAUAAAAHAA8AAAALAAUAAAAHABAAAAALAAUAAAAIABAAAAALAAUAAAAIAA8AAAALAAUAAAAIAA4AAAALAAUAAAAJAA4AAAALAAUAAAAJAA8AAAALAAUAAAAJABAAAAALAAUAAAAKABAAAAALAAUAAAAKAA8AAAALAAUAAAAKAA4AAAALAAUAAAALAA4AAAALAAUAAAALAA8AAAALAAUAAAALABAAAAALAAUAAAAMABAAAAALAAUAAAAMAA8AAAALAAUAAAAMAA4AAAALAAUAAAANAA4AAAALAAUAAAANAA8AAAALAAUAAAANABAAAAALAAUAAAAOABAAAAALAAUAAAAOAA8AAAALAAUAAAAOAA4AAAALAAUAAAAPAA4AAAALAAUAAAAPAA8AAAALAAUAAAAPABAAAAALAAUAAAAQABAAAAALAAUAAAAQAA8AAAALAAUAAAAQAA4AAAALAAUAAAARAA4AAAALAAUAAAARAA8AAAALAAUAAAARABAAAAALAAUAAAASABAAAAALAAUAAAASAA8AAAALAAUAAAASAA4AAAALAAUAAAATAA4AAAALAAUAAAATAA0AAAALAAUAAAATAAwAAAALAAUAAAATAAsAAAALAAUAAAATAAoAAAALAAUAAAATAAkAAAALAAUAAAATAAgAAAALAAUAAAATAAcAAAALAAUAAAATAAYAAAALAAUAAAATAA8AAAALAAUAAAATABAAAAALAAUAAAAGAAoAAAALAAUAAAAHAAkAAAALAAUAAAAHAAgAAAALAAUAAAAHAAcAAAALAAUAAAAHAAYAAAALAAUAAAAHAAUAAAALAAUAAAAHAAQAAAALAAUAAAAHAAMAAAALAAUAAAAHAAIAAAALAAUAAAA=")
+tile_set = SubResource("TileSet_upmfc")
+
+[node name="EventLayer" type="TileMapLayer" parent="."]
+tile_map_data = PackedByteArray("AAAEAA0AAQAAAAAAAAAEABAAAQAAAAAAAAA=")
+tile_set = SubResource("TileSet_fp8u1")
+
+[node name="Converter" type="Node" parent="." node_paths=PackedStringArray("map_layer", "event_layer")]
+script = ExtResource("3_pyevf")
+map_id = "crypt_00"
+map_name = "Crypt"
+map_layer = NodePath("../MapLayer")
+event_layer = NodePath("../EventLayer")
+output_resource_path = "res://maps/crypt/crypt_00.tres"
+map_theme = "crypt"
+start_pos = Vector2i(5, 2)
Index: scenes/tiles/crypt/Wall_Crypt.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/tiles/crypt/Wall_Crypt.tscn b/scenes/tiles/crypt/Wall_Crypt.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/tiles/crypt/Wall_Crypt.tscn	(date 1752085951000)
@@ -0,0 +1,80 @@
+[gd_scene load_steps=9 format=3 uid="uid://7jdgvbc31l32"]
+
+[ext_resource type="Texture2D" uid="uid://bxf0rxqbalfqo" path="res://GettyImages-2166462891_WEB.webp" id="1_w6kmm"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_4oi70"]
+albedo_texture = ExtResource("1_w6kmm")
+
+[sub_resource type="BoxMesh" id="BoxMesh_fgjl5"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fgjl5"]
+albedo_color = Color(0.0675493, 1.74233e-05, 0.288817, 1)
+metallic_specular = 0.0
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_l6igm"]
+shading_mode = 0
+
+[sub_resource type="BoxMesh" id="BoxMesh_l6igm"]
+material = SubResource("StandardMaterial3D_l6igm")
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_lpbdx"]
+shading_mode = 0
+
+[sub_resource type="BoxMesh" id="BoxMesh_w6kmm"]
+material = SubResource("StandardMaterial3D_lpbdx")
+
+[node name="Wall" type="Node3D"]
+
+[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 1.5, 0)
+material_override = SubResource("StandardMaterial3D_4oi70")
+mesh = SubResource("BoxMesh_fgjl5")
+surface_material_override/0 = SubResource("StandardMaterial3D_fgjl5")
+
+[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, 1, 3, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, -1, 3, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D4" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 3, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D5" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 3, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D6" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 0.05, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D9" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 0.05, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D7" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, 1, 0.05, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D8" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, -1, 0.05, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D14" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, 1, 1.525, 1)
+mesh = SubResource("BoxMesh_w6kmm")
+
+[node name="MeshInstance3D15" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, 1, 1.525, -1)
+mesh = SubResource("BoxMesh_w6kmm")
+
+[node name="MeshInstance3D16" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, -1, 1.525, -1)
+mesh = SubResource("BoxMesh_w6kmm")
+
+[node name="MeshInstance3D17" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, -1, 1.525, 1)
+mesh = SubResource("BoxMesh_w6kmm")
Index: scenes/tiles/crypt/Floor_Crypt.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/tiles/crypt/Floor_Crypt.tscn b/scenes/tiles/crypt/Floor_Crypt.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/tiles/crypt/Floor_Crypt.tscn	(date 1752085951000)
@@ -0,0 +1,22 @@
+[gd_scene load_steps=4 format=3 uid="uid://dhwhfwkr1t84v"]
+
+[ext_resource type="Texture2D" uid="uid://b5y8l3rv3tkok" path="res://floor_stone.jpg" id="1_2lirt"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_syy4v"]
+albedo_color = Color(0.385018, 0.339426, 1.92523e-07, 1)
+albedo_texture = ExtResource("1_2lirt")
+metallic_specular = 0.0
+normal_enabled = true
+normal_scale = -13.77
+normal_texture = ExtResource("1_2lirt")
+uv1_scale = Vector3(1.5, 1.5, 1)
+uv2_offset = Vector3(2, 2, 2)
+
+[sub_resource type="BoxMesh" id="BoxMesh_spmh5"]
+material = SubResource("StandardMaterial3D_syy4v")
+
+[node name="Floor" type="Node3D"]
+
+[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 0.1, 0, 0, 0, 2, 0, 0, 0)
+mesh = SubResource("BoxMesh_spmh5")
Index: scenes/tiles/castle/Wall_Castle.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/tiles/castle/Wall_Castle.tscn b/scenes/tiles/castle/Wall_Castle.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/tiles/castle/Wall_Castle.tscn	(date 1752085951000)
@@ -0,0 +1,74 @@
+[gd_scene load_steps=7 format=3 uid="uid://ctxaebagww8gy"]
+
+[sub_resource type="BoxMesh" id="BoxMesh_fgjl5"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_fgjl5"]
+albedo_color = Color(0.366595, 0.366595, 0.366595, 1)
+metallic_specular = 0.0
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_l6igm"]
+shading_mode = 0
+
+[sub_resource type="BoxMesh" id="BoxMesh_l6igm"]
+material = SubResource("StandardMaterial3D_l6igm")
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_igbnf"]
+shading_mode = 0
+
+[sub_resource type="BoxMesh" id="BoxMesh_qja0b"]
+material = SubResource("StandardMaterial3D_igbnf")
+
+[node name="Wall" type="Node3D"]
+
+[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 3, 0, 0, 0, 2, 0, 1.5, 0)
+mesh = SubResource("BoxMesh_fgjl5")
+surface_material_override/0 = SubResource("StandardMaterial3D_fgjl5")
+
+[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, 1, 3, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, -1, 3, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D4" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 3, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D5" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 3, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D6" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 0.05, 1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D9" type="MeshInstance3D" parent="."]
+transform = Transform3D(-4.37114e-10, 0, 2, 0, 0.01, 0, -0.01, 0, -8.74228e-08, 0, 0.05, -1)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D7" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, 1, 0.05, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D8" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 0.01, 0, 0, 0, 2, -1, 0.05, 0)
+mesh = SubResource("BoxMesh_l6igm")
+
+[node name="MeshInstance3D14" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, 1, 1.525, 1)
+mesh = SubResource("BoxMesh_qja0b")
+
+[node name="MeshInstance3D15" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, 1, 1.525, -1)
+mesh = SubResource("BoxMesh_qja0b")
+
+[node name="MeshInstance3D16" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, -1, 1.525, -1)
+mesh = SubResource("BoxMesh_qja0b")
+
+[node name="MeshInstance3D17" type="MeshInstance3D" parent="."]
+transform = Transform3D(0.01, 0, 0, 0, 2.95, 0, 0, 0, 0.01, -1, 1.525, 1)
+mesh = SubResource("BoxMesh_qja0b")
Index: scenes/tiles/castle/Floor_Castle.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/tiles/castle/Floor_Castle.tscn b/scenes/tiles/castle/Floor_Castle.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/tiles/castle/Floor_Castle.tscn	(date 1752085951000)
@@ -0,0 +1,18 @@
+[gd_scene load_steps=4 format=3 uid="uid://bnyakohbutbli"]
+
+[sub_resource type="BoxMesh" id="BoxMesh_spmh5"]
+
+[sub_resource type="ImageTexture" id="ImageTexture_spmh5"]
+
+[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_spmh5"]
+albedo_color = Color(0.427493, 0.427493, 0.427493, 1)
+albedo_texture = SubResource("ImageTexture_spmh5")
+albedo_texture_msdf = true
+metallic_specular = 0.0
+
+[node name="Floor" type="Node3D"]
+
+[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
+transform = Transform3D(2, 0, 0, 0, 0.1, 0, 0, 0, 2, 0, 0, 0)
+mesh = SubResource("BoxMesh_spmh5")
+surface_material_override/0 = SubResource("StandardMaterial3D_spmh5")
Index: scenes/EnemySlot.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/EnemySlot.tscn b/scenes/EnemySlot.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/EnemySlot.tscn	(date 1752085951000)
@@ -0,0 +1,13 @@
+[gd_scene load_steps=3 format=3 uid="uid://b1jxfg32brb8x"]
+
+[ext_resource type="Script" uid="uid://dymuc6nxf4l2d" path="res://scripts/EnemySlot.gd" id="1_loh0k"]
+[ext_resource type="Resource" uid="uid://btr7k6tmwt3qi" path="res://characters/foes/_fallback/boo.tres" id="2_loh0k"]
+
+[node name="EnemySlot" type="Node3D"]
+script = ExtResource("1_loh0k")
+fallback = ExtResource("2_loh0k")
+
+[node name="NameLabel" type="Label" parent="."]
+offset_right = 76.0
+offset_bottom = 23.0
+text = "Unnamed"
Index: scenes/UIBattle.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/UIBattle.tscn b/scenes/UIBattle.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/UIBattle.tscn	(date 1752085951000)
@@ -0,0 +1,79 @@
+[gd_scene load_steps=5 format=3 uid="uid://calltc1gumdi2"]
+
+[ext_resource type="Script" uid="uid://b4kodgy0qo0cl" path="res://scripts/UIBattle.gd" id="1_a268n"]
+
+[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_a268n"]
+bg_color = Color(0, 0.365644, 0.306951, 1)
+
+[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_jaicp"]
+bg_color = Color(0, 0.559558, 0.459418, 1)
+
+[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_3bujy"]
+bg_color = Color(0, 0.508119, 0.47713, 1)
+
+[node name="BattleUI" type="Control"]
+layout_mode = 3
+anchor_right = 0.319
+anchor_bottom = 1.0
+offset_right = 0.511993
+script = ExtResource("1_a268n")
+
+[node name="VBoxContainer" type="VBoxContainer" parent="."]
+layout_mode = 1
+anchors_preset = -1
+anchor_left = 0.391
+anchor_top = 0.043
+anchor_right = 0.609
+anchor_bottom = 0.957
+offset_left = 0.111984
+offset_top = 0.0879998
+offset_right = -0.112015
+offset_bottom = -0.0879974
+
+[node name="AttackButton" type="Button" parent="VBoxContainer"]
+layout_mode = 2
+theme_override_styles/focus = SubResource("StyleBoxFlat_a268n")
+action_mode = 0
+text = "Attack"
+
+[node name="DefendButton" type="Button" parent="VBoxContainer"]
+layout_mode = 2
+theme_override_styles/hover = SubResource("StyleBoxFlat_jaicp")
+text = "Defend"
+
+[node name="SkillButton" type="Button" parent="VBoxContainer"]
+layout_mode = 2
+text = "Skill"
+
+[node name="ItemButton" type="Button" parent="VBoxContainer"]
+layout_mode = 2
+theme_override_styles/hover = SubResource("StyleBoxFlat_3bujy")
+text = "Item"
+
+[node name="FleeButton" type="Button" parent="VBoxContainer"]
+layout_mode = 2
+text = "Flee"
+
+[node name="SkillPopup" type="PopupPanel" parent="."]
+visible = true
+
+[node name="ScrollContainer" type="ScrollContainer" parent="SkillPopup"]
+anchors_preset = -1
+anchor_left = 0.04
+anchor_top = 1.0
+anchor_right = 1.04
+anchor_bottom = 1.99
+offset_left = 4.0
+offset_top = 4.0
+offset_right = 96.0
+offset_bottom = 96.0
+
+[node name="SkillListContainer" type="VBoxContainer" parent="SkillPopup/ScrollContainer"]
+layout_mode = 2
+
+[connection signal="pressed" from="VBoxContainer/AttackButton" to="." method="_on_attack_button_pressed"]
+[connection signal="toggled" from="VBoxContainer/AttackButton" to="." method="_on_attack_button_toggled"]
+[connection signal="pressed" from="VBoxContainer/DefendButton" to="." method="_on_defend_button_pressed"]
+[connection signal="pressed" from="VBoxContainer/SkillButton" to="." method="_on_skill_button_pressed"]
+[connection signal="pressed" from="VBoxContainer/ItemButton" to="." method="_on_item_button_pressed"]
+[connection signal="pressed" from="VBoxContainer/FleeButton" to="." method="_on_flee_button_pressed"]
Index: scenes/UIPartyMemberSlot.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/UIPartyMemberSlot.tscn b/scenes/UIPartyMemberSlot.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/UIPartyMemberSlot.tscn	(date 1752085951000)
@@ -0,0 +1,121 @@
+[gd_scene load_steps=3 format=3 uid="uid://b6i5a4uv2t1do"]
+
+[ext_resource type="Script" uid="uid://br1f8omrid7gi" path="res://scripts/UIPartyMemberSlot.gd" id="1_c0oo1"]
+
+[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_m4dhj"]
+bg_color = Color(0, 0, 0, 1)
+border_width_left = 1
+border_width_top = 1
+border_width_right = 1
+border_width_bottom = 1
+border_color = Color(1, 1, 1, 1)
+
+[node name="PartyMemberSlot" type="Panel"]
+custom_minimum_size = Vector2(130, 80)
+anchors_preset = -1
+anchor_right = 0.114
+anchor_bottom = 0.123
+offset_right = -1.328
+offset_bottom = 0.295998
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_styles/panel = SubResource("StyleBoxFlat_m4dhj")
+script = ExtResource("1_c0oo1")
+
+[node name="MarginContainer" type="MarginContainer" parent="."]
+layout_mode = 1
+anchors_preset = 15
+anchor_right = 1.0
+anchor_bottom = 1.0
+grow_horizontal = 2
+grow_vertical = 2
+theme_override_constants/margin_left = 10
+theme_override_constants/margin_top = 5
+theme_override_constants/margin_right = 10
+theme_override_constants/margin_bottom = 5
+
+[node name="GridContainer" type="GridContainer" parent="MarginContainer"]
+layout_mode = 2
+size_flags_horizontal = 4
+size_flags_vertical = 4
+
+[node name="NameContainer" type="GridContainer" parent="MarginContainer/GridContainer"]
+layout_mode = 2
+size_flags_horizontal = 6
+size_flags_vertical = 3
+
+[node name="Name" type="Label" parent="MarginContainer/GridContainer/NameContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 14
+text = "Unnamed"
+horizontal_alignment = 1
+vertical_alignment = 1
+
+[node name="LabelValueContainer" type="GridContainer" parent="MarginContainer/GridContainer"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+columns = 2
+
+[node name="Labels" type="GridContainer" parent="MarginContainer/GridContainer/LabelValueContainer"]
+layout_mode = 2
+size_flags_horizontal = 6
+
+[node name="HP" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Labels"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "HP"
+
+[node name="MP" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Labels"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "MP"
+
+[node name="Values" type="GridContainer" parent="MarginContainer/GridContainer/LabelValueContainer"]
+custom_minimum_size = Vector2(90, 0)
+layout_mode = 2
+size_flags_horizontal = 6
+
+[node name="HPContainer" type="GridContainer" parent="MarginContainer/GridContainer/LabelValueContainer/Values"]
+layout_mode = 2
+size_flags_horizontal = 4
+columns = 4
+
+[node name="CurrentHP" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Values/HPContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "9999"
+horizontal_alignment = 2
+
+[node name="Slash" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Values/HPContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "/"
+
+[node name="MaxHP" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Values/HPContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "9999"
+
+[node name="MPContainer" type="GridContainer" parent="MarginContainer/GridContainer/LabelValueContainer/Values"]
+layout_mode = 2
+size_flags_horizontal = 6
+size_flags_vertical = 3
+columns = 4
+
+[node name="CurrentMP" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Values/MPContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "50"
+
+[node name="Slash" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Values/MPContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "/"
+
+[node name="MaxMP" type="Label" parent="MarginContainer/GridContainer/LabelValueContainer/Values/MPContainer"]
+layout_mode = 2
+theme_override_font_sizes/font_size = 12
+text = "80"
+
+[connection signal="gui_input" from="." to="." method="_on_gui_input"]
Index: scenes/player.gd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/player.gd b/scenes/player.gd
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/player.gd	(date 1752085951000)
@@ -0,0 +1,133 @@
+extends Node3D
+
+signal player_moved(data: Dictionary)
+signal start_encounter(data: Dictionary)
+signal map_transition(data: Dictionary)
+
+var grid_pos = Vector2i(0, 0)
+
+var dir_vectors = {
+	0: Vector2i(0, -1),
+	90: Vector2i(-1, 0),
+	180: Vector2i(0, 1),
+	270: Vector2i(1, 0),
+}
+
+const TILE_SIZE = 2.0
+var can_move = true
+var in_battle = false
+var can_rotate = true
+
+func _ready():
+	print("Player instance: %s" % self)
+	grid_pos = Vector2i(1, 1)
+	global_position = Vector3(grid_pos.x * TILE_SIZE, 0, grid_pos.y * TILE_SIZE)
+	rotation_degrees = Vector3(0, 0, 0)
+
+func set_grid_pos(pos: Vector2i):
+	grid_pos = pos
+	global_position = Vector3(pos.x * TILE_SIZE, 0, pos.y * TILE_SIZE)
+
+func get_facing_direction_deg() -> int:
+	var rot = fmod(rotation_degrees.y, 360)
+	if rot < 0:
+		rot += 360
+	return int(round(rot / 90.0)) * 90 % 360
+
+func _unhandled_input(event):
+	if not is_all_movement_enabled():
+		return
+
+	if event.is_action_pressed("move_forward"):
+		move_player("forward")
+	elif event.is_action_pressed("move_backwards"):
+		move_player("backward")
+	elif event.is_action_pressed("strafe_left"):
+		move_player("left")
+	elif event.is_action_pressed("strafe_right"):
+		move_player("right")
+	elif event.is_action_pressed("turn_left"):
+		rotate_player(90)
+	elif event.is_action_pressed("turn_right"):
+		rotate_player(-90)
+
+func move_player(direction: String):
+	if not is_all_movement_enabled():
+		return
+	disable_all_movement()
+	var facing_deg = get_facing_direction_deg()
+	var dir = Vector2i(0, 0)
+
+	match direction:
+		"forward":
+			dir = dir_vectors.get(facing_deg, Vector2i(0, 0))
+		"backward":
+			dir = dir_vectors.get((facing_deg + 180) % 360, Vector2i(0, 0))
+		"left":
+			dir = dir_vectors.get((facing_deg + 90) % 360, Vector2i(0, 0))
+		"right":
+			dir = dir_vectors.get((facing_deg + 270) % 360, Vector2i(0, 0))
+
+	var target_tile = grid_pos + dir
+
+	# oob check
+	if target_tile.y < 0 or target_tile.y >= MapInstance.map_data.size() or target_tile.x < 0 or target_tile.x >= MapInstance.map_data[0].size():
+		enable_all_movement()
+		print("oob")
+		return
+
+	# wall check
+	var target_tile_data = MapInstance.map_data[target_tile.y][target_tile.x]
+	if target_tile_data["type"] == "wall":
+		enable_all_movement()
+		return
+
+	grid_pos = target_tile
+	var move_offset = Vector3(dir.x * TILE_SIZE, 0, dir.y * TILE_SIZE)
+	var target_position = global_position + move_offset
+
+	var tween = get_tree().create_tween()
+	tween.tween_property(self, "global_position", target_position, 0.25)
+	await tween.finished
+	print("Emitting player moved signal...")
+	emit_signal("player_moved", {
+		"grid_position": grid_pos
+	})
+
+	if MapManager.is_transition(target_tile_data):
+		emit_signal("map_transition", target_tile_data["transition"])
+		return
+	
+	if EncounterManager.is_encounter(target_tile_data):
+		var encounter = target_tile_data["encounter"]
+		var arena = target_tile_data["arena"]
+		emit_signal("start_encounter", {"arena": arena, "enemy": encounter})
+		return
+	
+	enable_all_movement()
+
+func rotate_player(degrees: float):
+	if not is_all_movement_enabled():
+		return
+
+	var tween = get_tree().create_tween()
+	var target_rotation = rotation_degrees
+	target_rotation.y += degrees
+
+	tween.tween_property(self, "rotation_degrees", target_rotation, 0.15).set_trans(Tween.TRANS_SINE).set_ease(Tween.EASE_IN_OUT)
+	await tween.finished
+
+	var snapped_y = int(round(rotation_degrees.y / 90.0)) * 90 % 360
+	rotation_degrees.y = snapped_y if snapped_y >= 0 else snapped_y + 360
+
+	enable_all_movement()
+
+func disable_all_movement() -> void:
+	can_rotate = false
+	can_move = false
+func enable_all_movement() -> void:
+	can_rotate = true
+	can_move = true
+	
+func is_all_movement_enabled() -> bool:
+	return can_move and can_rotate
Index: maps/hub/starting_area.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/maps/hub/starting_area.tres b/maps/hub/starting_area.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/maps/hub/starting_area.tres	(date 1752085951000)
@@ -0,0 +1,2427 @@
+[gd_resource type="Resource" script_class="MapData" load_steps=2 format=3 uid="uid://dlkg8rpi2v570"]
+
+[ext_resource type="Script" uid="uid://i6llluly1w8" path="res://scripts/MapData.gd" id="1_c5v37"]
+
+[resource]
+script = ExtResource("1_c5v37")
+id = "area_00"
+name = "Beginning Area"
+data = [[{
+"arena": "arena_default_00",
+"encounter": "skeleton",
+"event": "test",
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": "arena_default_00",
+"encounter": "skeleton",
+"event": "test",
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": "crypt_00",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"transition": null,
+"type": "wall"
+}]]
+theme = "default"
+start_pos = Vector2i(6, 1)
+transitions = {}
Index: scenes/Player.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/Player.tscn b/scenes/Player.tscn
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/Player.tscn	(date 1752085951000)
@@ -0,0 +1,33 @@
+[gd_scene load_steps=3 format=3 uid="uid://ed1wo7vfltsb"]
+
+[ext_resource type="Script" uid="uid://barrw5aujn17p" path="res://scenes/player.gd" id="1_xhfnw"]
+
+[sub_resource type="BoxShape3D" id="BoxShape3D_p0vlq"]
+size = Vector3(0.620972, 1.99615, 0.552612)
+
+[node name="Player" type="Node3D"]
+script = ExtResource("1_xhfnw")
+
+[node name="Camera3D" type="Camera3D" parent="."]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.8, -0.302716)
+fov = 93.0034
+
+[node name="SpotLight3D" type="SpotLight3D" parent="Camera3D"]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.295857)
+light_color = Color(0.000155222, 0.180892, 0.600762, 1)
+light_energy = 4.718
+light_indirect_energy = 1.646
+light_volumetric_fog_energy = 0.0
+light_size = 0.111
+light_bake_mode = 1
+shadow_enabled = true
+spot_range = 3.01361
+spot_attenuation = 2.82
+spot_angle = 39.9114
+spot_angle_attenuation = 0.63728
+
+[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
+
+[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
+transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
+shape = SubResource("BoxShape3D_p0vlq")
Index: maps/crypt/crypt_00.tres
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/maps/crypt/crypt_00.tres b/maps/crypt/crypt_00.tres
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/maps/crypt/crypt_00.tres	(date 1752085951000)
@@ -0,0 +1,4848 @@
+[gd_resource type="Resource" script_class="MapData" load_steps=2 format=3 uid="uid://ca1h8vjjk8vcm"]
+
+[ext_resource type="Script" uid="uid://i6llluly1w8" path="res://scripts/MapData.gd" id="1_gn16m"]
+
+[resource]
+script = ExtResource("1_gn16m")
+id = "crypt_00"
+name = "Crypt"
+data = [[{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": "arena_default_00",
+"encounter": "goblin",
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": "arena_default_00",
+"encounter": "goblin",
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_floor",
+"type": "floor"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}], [{
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "stone_wall",
+"type": "wall"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}, {
+"arena": null,
+"encounter": null,
+"event": null,
+"style": "default",
+"type": "empty"
+}]]
+theme = "crypt"
+start_pos = Vector2i(15, 2)
+transitions = {}
Index: scenes/player.gd.uid
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/player.gd.uid b/scenes/player.gd.uid
new file mode 100644
--- /dev/null	(date 1752085951000)
+++ b/scenes/player.gd.uid	(date 1752085951000)
@@ -0,0 +1,1 @@
+uid://barrw5aujn17p
Index: DQG5i7nW0AAVxxU.jpg.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DQG5i7nW0AAVxxU.jpg.import b/DQG5i7nW0AAVxxU.jpg.import
new file mode 100644
--- /dev/null	(date 1752237144994)
+++ b/DQG5i7nW0AAVxxU.jpg.import	(date 1752237144994)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://dmj0vepc1lrgr"
+path.s3tc="res://.godot/imported/DQG5i7nW0AAVxxU.jpg-30943b174fe2895fe2b3b5df629e9a30.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://DQG5i7nW0AAVxxU.jpg"
+dest_files=["res://.godot/imported/DQG5i7nW0AAVxxU.jpg-30943b174fe2895fe2b3b5df629e9a30.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=0
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=0
+roughness/src_normal=""
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: project.godot
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project.godot b/project.godot
new file mode 100644
--- /dev/null	(date 1752259189787)
+++ b/project.godot	(date 1752259189787)
@@ -0,0 +1,68 @@
+; Engine configuration file.
+; It's best edited using the editor UI and not directly,
+; since the parameters that go here are not all obvious.
+;
+; Format:
+;   [section] ; section goes between []
+;   param=value ; assign values to parameters
+
+config_version=5
+
+[application]
+
+config/name="misery"
+run/main_scene="uid://cphcmsugjsscn"
+config/features=PackedStringArray("4.4", "Forward Plus")
+
+[autoload]
+
+MapInstance="*res://scripts/MapInstance.gd"
+MapManager="*res://scripts/MapManager.gd"
+TileFactory="*res://scripts/TileFactory.gd"
+CharacterRegistry="*res://scripts/CharacterRegistry.gd"
+PartyManager="*res://scripts/PartyManager.gd"
+EncounterManager="*res://scripts/EncounterManager.gd"
+TargetingManager="*res://scripts/TargetingManager.gd"
+DamageResolver="*res://scripts/DamageResolver.gd"
+
+[editor]
+
+version_control/plugin_name="GitPlugin"
+version_control/autoload_on_startup=true
+
+[input]
+
+strafe_left={
+"deadzone": 0.2,
+"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":81,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
+]
+}
+strafe_right={
+"deadzone": 0.2,
+"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":69,"key_label":0,"unicode":0,"location":0,"echo":false,"script":null)
+]
+}
+move_forward={
+"deadzone": 0.2,
+"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":87,"key_label":0,"unicode":119,"location":0,"echo":false,"script":null)
+]
+}
+move_backwards={
+"deadzone": 0.2,
+"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":83,"key_label":0,"unicode":115,"location":0,"echo":false,"script":null)
+]
+}
+turn_left={
+"deadzone": 0.2,
+"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":65,"key_label":0,"unicode":97,"location":0,"echo":false,"script":null)
+]
+}
+turn_right={
+"deadzone": 0.2,
+"events": [Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":-1,"window_id":0,"alt_pressed":false,"shift_pressed":false,"ctrl_pressed":false,"meta_pressed":false,"pressed":false,"keycode":0,"physical_keycode":68,"key_label":0,"unicode":100,"location":0,"echo":false,"script":null)
+]
+}
+
+[physics]
+
+3d/physics_engine="Jolt Physics"
Index: night sky.jpg.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/night sky.jpg.import b/night sky.jpg.import
new file mode 100644
--- /dev/null	(date 1752237145060)
+++ b/night sky.jpg.import	(date 1752237145060)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://da5rfgx1dlrog"
+path.s3tc="res://.godot/imported/night sky.jpg-b96fa5ae6e2dea96cb096a105f7acf54.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://night sky.jpg"
+dest_files=["res://.godot/imported/night sky.jpg-b96fa5ae6e2dea96cb096a105f7acf54.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=0
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=0
+roughness/src_normal=""
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: scenes/main.tscn
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scenes/main.tscn b/scenes/main.tscn
new file mode 100644
--- /dev/null	(date 1752262112156)
+++ b/scenes/main.tscn	(date 1752262112156)
@@ -0,0 +1,149 @@
+[gd_scene load_steps=7 format=3 uid="uid://cphcmsugjsscn"]
+
+[ext_resource type="PackedScene" uid="uid://0g8fcobbvi84" path="res://scenes/dungeon/dungeon.tscn" id="1_0wfyh"]
+[ext_resource type="PackedScene" uid="uid://ed1wo7vfltsb" path="res://scenes/Player.tscn" id="2_sugp2"]
+[ext_resource type="Script" uid="uid://bk075a76c1hkh" path="res://scripts/UIPartyContainer.gd" id="3_sugp2"]
+[ext_resource type="PackedScene" uid="uid://b6i5a4uv2t1do" path="res://scenes/UIPartyMemberSlot.tscn" id="4_jyhfs"]
+
+[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_tbgi4"]
+bg_color = Color(0, 0, 0, 1)
+border_width_left = 1
+border_width_top = 1
+border_width_right = 1
+border_width_bottom = 1
+
+[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_sugp2"]
+
+[node name="Main" type="Node3D"]
+
+[node name="Dungeon" parent="." instance=ExtResource("1_0wfyh")]
+
+[node name="Player" parent="Dungeon" instance=ExtResource("2_sugp2")]
+
+[node name="TransitionRect" type="ColorRect" parent="."]
+layout_direction = 1
+anchors_preset = 15
+anchor_right = 1.0
+anchor_bottom = 1.0
+grow_horizontal = 2
+grow_vertical = 2
+color = Color(0.0694218, 0.00964971, 0.263646, 1)
+
+[node name="BattleTransition" type="ColorRect" parent="."]
+anchors_preset = 15
+anchor_right = 1.0
+anchor_bottom = 1.0
+grow_horizontal = 2
+grow_vertical = 2
+color = Color(0.546409, 7.33994e-07, 3.85046e-07, 1)
+
+[node name="PartyPanel" type="Panel" parent="."]
+anchors_preset = -1
+anchor_top = 0.716
+anchor_right = 1.0
+anchor_bottom = 1.0
+offset_top = 0.0319824
+grow_horizontal = 2
+grow_vertical = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+script = ExtResource("3_sugp2")
+
+[node name="PanelContainer" type="PanelContainer" parent="PartyPanel"]
+layout_mode = 1
+anchors_preset = -1
+anchor_left = 0.319
+anchor_right = 0.682
+anchor_bottom = 1.0
+offset_left = 0.511993
+offset_right = 0.335938
+theme_override_styles/panel = SubResource("StyleBoxFlat_tbgi4")
+
+[node name="PartyContainer" type="VBoxContainer" parent="PartyPanel/PanelContainer"]
+material = SubResource("CanvasItemMaterial_sugp2")
+custom_minimum_size = Vector2(100, 50)
+layout_mode = 2
+
+[node name="FrontRow" type="GridContainer" parent="PartyPanel/PanelContainer/PartyContainer"]
+layout_mode = 2
+size_flags_horizontal = 4
+size_flags_vertical = 10
+columns = 3
+
+[node name="PartyMemberSlot1" type="MarginContainer" parent="PartyPanel/PanelContainer/PartyContainer/FrontRow"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_constants/margin_left = 3
+theme_override_constants/margin_top = 3
+theme_override_constants/margin_right = 3
+theme_override_constants/margin_bottom = 3
+
+[node name="PartyMember" parent="PartyPanel/PanelContainer/PartyContainer/FrontRow/PartyMemberSlot1" instance=ExtResource("4_jyhfs")]
+layout_mode = 2
+
+[node name="PartyMemberSlot2" type="MarginContainer" parent="PartyPanel/PanelContainer/PartyContainer/FrontRow"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_constants/margin_left = 3
+theme_override_constants/margin_top = 3
+theme_override_constants/margin_right = 3
+theme_override_constants/margin_bottom = 3
+
+[node name="PartyMember" parent="PartyPanel/PanelContainer/PartyContainer/FrontRow/PartyMemberSlot2" instance=ExtResource("4_jyhfs")]
+layout_mode = 2
+
+[node name="PartyMemberSlot3" type="MarginContainer" parent="PartyPanel/PanelContainer/PartyContainer/FrontRow"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_constants/margin_left = 3
+theme_override_constants/margin_top = 3
+theme_override_constants/margin_right = 3
+theme_override_constants/margin_bottom = 3
+
+[node name="PartyMember" parent="PartyPanel/PanelContainer/PartyContainer/FrontRow/PartyMemberSlot3" instance=ExtResource("4_jyhfs")]
+layout_mode = 2
+
+[node name="BackRow" type="GridContainer" parent="PartyPanel/PanelContainer/PartyContainer"]
+layout_mode = 2
+size_flags_horizontal = 4
+size_flags_vertical = 2
+columns = 3
+
+[node name="PartyMemberSlot1" type="MarginContainer" parent="PartyPanel/PanelContainer/PartyContainer/BackRow"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_constants/margin_left = 3
+theme_override_constants/margin_top = 3
+theme_override_constants/margin_right = 3
+theme_override_constants/margin_bottom = 3
+
+[node name="PartyMember" parent="PartyPanel/PanelContainer/PartyContainer/BackRow/PartyMemberSlot1" instance=ExtResource("4_jyhfs")]
+layout_mode = 2
+
+[node name="PartyMemberSlot2" type="MarginContainer" parent="PartyPanel/PanelContainer/PartyContainer/BackRow"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_constants/margin_left = 3
+theme_override_constants/margin_top = 3
+theme_override_constants/margin_right = 3
+theme_override_constants/margin_bottom = 3
+
+[node name="PartyMember" parent="PartyPanel/PanelContainer/PartyContainer/BackRow/PartyMemberSlot2" instance=ExtResource("4_jyhfs")]
+layout_mode = 2
+
+[node name="PartyMemberSlot3" type="MarginContainer" parent="PartyPanel/PanelContainer/PartyContainer/BackRow"]
+layout_mode = 2
+size_flags_horizontal = 3
+size_flags_vertical = 3
+theme_override_constants/margin_left = 3
+theme_override_constants/margin_top = 3
+theme_override_constants/margin_right = 3
+theme_override_constants/margin_bottom = 3
+
+[node name="PartyMember" parent="PartyPanel/PanelContainer/PartyContainer/BackRow/PartyMemberSlot3" instance=ExtResource("4_jyhfs")]
+layout_mode = 2
Index: 7fe5e10d720f9206f799410f554c0398fd6a2fd7.png.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/7fe5e10d720f9206f799410f554c0398fd6a2fd7.png.import b/7fe5e10d720f9206f799410f554c0398fd6a2fd7.png.import
new file mode 100644
--- /dev/null	(date 1752237144982)
+++ b/7fe5e10d720f9206f799410f554c0398fd6a2fd7.png.import	(date 1752237144982)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://c6lrs8nmxuj34"
+path.s3tc="res://.godot/imported/7fe5e10d720f9206f799410f554c0398fd6a2fd7.png-9a0c145865fd1f9efdce2061213b7192.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://7fe5e10d720f9206f799410f554c0398fd6a2fd7.png"
+dest_files=["res://.godot/imported/7fe5e10d720f9206f799410f554c0398fd6a2fd7.png-9a0c145865fd1f9efdce2061213b7192.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=0
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=0
+roughness/src_normal=""
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: balmer-andromalius-57x88-alpha.png.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/balmer-andromalius-57x88-alpha.png.import b/balmer-andromalius-57x88-alpha.png.import
new file mode 100644
--- /dev/null	(date 1752237144994)
+++ b/balmer-andromalius-57x88-alpha.png.import	(date 1752237144994)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://cjh84x068jx5c"
+path.s3tc="res://.godot/imported/balmer-andromalius-57x88-alpha.png-22244822e927570e1f682840439ea2ab.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://balmer-andromalius-57x88-alpha.png"
+dest_files=["res://.godot/imported/balmer-andromalius-57x88-alpha.png-22244822e927570e1f682840439ea2ab.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=0
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=0
+roughness/src_normal=""
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: GettyImages-2166462891_WEB.webp.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GettyImages-2166462891_WEB.webp.import b/GettyImages-2166462891_WEB.webp.import
new file mode 100644
--- /dev/null	(date 1752237145114)
+++ b/GettyImages-2166462891_WEB.webp.import	(date 1752237145114)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://bxf0rxqbalfqo"
+path.s3tc="res://.godot/imported/GettyImages-2166462891_WEB.webp-98fd1909f114d2305a79bf509425d1c7.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://GettyImages-2166462891_WEB.webp"
+dest_files=["res://.godot/imported/GettyImages-2166462891_WEB.webp-98fd1909f114d2305a79bf509425d1c7.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=0
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=0
+roughness/src_normal=""
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: floor_stone.jpg.import
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/floor_stone.jpg.import b/floor_stone.jpg.import
new file mode 100644
--- /dev/null	(date 1752237145117)
+++ b/floor_stone.jpg.import	(date 1752237145117)
@@ -0,0 +1,35 @@
+[remap]
+
+importer="texture"
+type="CompressedTexture2D"
+uid="uid://b5y8l3rv3tkok"
+path.s3tc="res://.godot/imported/floor_stone.jpg-174f83846018e36f29e70ca2946a733a.s3tc.ctex"
+metadata={
+"imported_formats": ["s3tc_bptc"],
+"vram_texture": true
+}
+
+[deps]
+
+source_file="res://floor_stone.jpg"
+dest_files=["res://.godot/imported/floor_stone.jpg-174f83846018e36f29e70ca2946a733a.s3tc.ctex"]
+
+[params]
+
+compress/mode=2
+compress/high_quality=false
+compress/lossy_quality=0.7
+compress/hdr_compression=1
+compress/normal_map=1
+compress/channel_pack=0
+mipmaps/generate=true
+mipmaps/limit=-1
+roughness/mode=1
+roughness/src_normal="res://floor_stone.jpg"
+process/fix_alpha_border=true
+process/premult_alpha=false
+process/normal_map_invert_y=false
+process/hdr_as_srgb=false
+process/hdr_clamp_exposure=false
+process/size_limit=0
+detect_3d/compress_to=0
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1752262826719)
+++ b/.gitignore	(date 1752262826719)
@@ -0,0 +1,4 @@
+# Godot 4+ specific ignores
+.godot/
+/android/
+.idea
\ No newline at end of file
